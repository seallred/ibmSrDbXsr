-- This CLP file was created using DB2LOOK Version 8.2
-- Timestamp: Fri Aug 29 20:58:12 EDT 2008
-- Database Name: XSRDAY         
-- Database Manager Version: DB2/AIX64 Version 8.2.9       
-- Database Codepage: 1208
-- Database Collating Sequence is: BINARY


CONNECT TO XSRDAY USER xsrdbadm;


---------------------------------
-- for existing granted privileges, excluding the original definer of the object
---------------------------------


CREATE SEQUENCE "XSR     "."SEQ_ADMIN_RIGHTS_ID" AS INTEGER
	MINVALUE 2000000 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 50 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_APP_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ATTACHMENT_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 50 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_AUDIT_ACTION_TYPE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	NO CACHE NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_AUDIT_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	NO CACHE NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_AUDIT_OBJ_TYPE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	NO CACHE NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_AVL_REQUEST_TYPE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_A_ROUTE_EXCL_DAY_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_A_ROUTE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_A_ROUTE_KEYWORD_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_A_ROUTE_KEYWORD_LIST_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_A_ROUTE_SET_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_A_ROUTE_TIME_SLOT_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_BASIC_ROUTE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_COMP_GROUP_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_COMP_GROUP_TYPE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ERR_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_OBJ_TYPE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_OS_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PMR_DRAFT_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PMR_DRAFT_RETAIN_INFO_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PMR_DRAFT_XSR_INFO_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PMR_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PMR_TEXT_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PREM_ROUTE_EXCL_DAYS_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PREM_ROUTE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PREM_ROUTE_SET_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PREM_ROUTE_TIME_SLOT_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_PROPERTIES_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_QUEUE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 3
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_COUNTRY_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_ENT_EXC_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_EXCL_DAY_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_KEYWORD_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_KEYWORD_LIST_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_SET_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_ROUTE_TIME_SLOT_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_SCOPE_TYPE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_SYNC_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_TRAN_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_T_ROUTE_EXCL_DAY_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_T_ROUTE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_T_ROUTE_KEYWORD_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_T_ROUTE_KEYWORD_LIST_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_T_ROUTE_SET_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_T_ROUTE_TIME_SLOT_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_USER_AUTH_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_USER_PROFILE_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;
CREATE SEQUENCE "XSR     "."SEQ_XSR_PROPERTIES_LOG_ID" AS INTEGER
	MINVALUE 1 MAXVALUE 2147483647
	START WITH 1 INCREMENT BY 1
	CACHE 20 NO CYCLE NO ORDER;

---------------------------------
-- DDL statements for User Defined Functions
---------------------------------


SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE FUNCTION XSR.ORIGINAL_FILENAME ( FILENAME VARCHAR(4000) )
  RETURNS VARCHAR(4000)
  LANGUAGE SQL
  DETERMINISTIC
  NO EXTERNAL ACTION
  CONTAINS SQL
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
BEGIN ATOMIC
     DECLARE REVSTR VARCHAR(4000); --
        IF FILENAME LIKE '%\%' THEN
     set REVSTR= xsr.reverse(substr(xsr.reverse(FILENAME),1,locate('\',xsr.reverse(FILENAME))-1)); --
     		 ELSE 
				 SET REVSTR= FILENAME; --
		 END IF; --
     RETURN REVSTR; --
   END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE FUNCTION XSR.REVERSE ( INSTR VARCHAR(4000) )
  RETURNS VARCHAR(4000)
  LANGUAGE SQL
  DETERMINISTIC
  NO EXTERNAL ACTION
  CONTAINS SQL
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
BEGIN ATOMIC
     DECLARE REVSTR, RESTSTR VARCHAR(4000) DEFAULT '';-- 
     DECLARE LEN INT; --
     IF INSTR IS NULL THEN
     RETURN NULL; --
     END IF; --
     SET (RESTSTR, LEN) = (INSTR, LENGTH(INSTR)); --
     WHILE LEN > 0 DO
     SET (REVSTR, RESTSTR, LEN) 
       = (SUBSTR(RESTSTR, 1, 1) CONCAT REVSTR, 
       SUBSTR(RESTSTR, 2, LEN - 1),
       LEN - 1); --
     END WHILE; --
     RETURN REVSTR; --
   END;

------------------------------------------------
-- DDL Statements for table "XSR     "."COMP_GROUP_TYPE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."COMP_GROUP_TYPE"  (
		  "COMP_GROUP_TYPE_ID" INTEGER NOT NULL , 
		  "TYPE_CODE" VARCHAR(8) NOT NULL , 
		  "DESCRIPTION" VARCHAR(80) NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."COMP_GROUP_TYPE" IS 'Identifies the type of component group.  Component groups can be created for various reasons and each component group may include different components depending on use.';


-- DDL Statements for primary key on Table "XSR     "."COMP_GROUP_TYPE"

ALTER TABLE "XSR     "."COMP_GROUP_TYPE" 
	ADD CONSTRAINT "COMP_GROUP_TYPE_PK" PRIMARY KEY
		("COMP_GROUP_TYPE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."AVL_STATUS_CODE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."AVL_STATUS_CODE"  (
		  "STATUS_CODE" CHAR(1) NOT NULL , 
		  "DESCRIPTION" VARGRAPHIC(128) NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."AVL_STATUS_CODE" IS 'Master table of status codes for the xsr application. ACTV_STAT_CODE    DSCR 0 Active 1 Inactive 2 Expired 3 Migrated';


-- DDL Statements for primary key on Table "XSR     "."AVL_STATUS_CODE"

ALTER TABLE "XSR     "."AVL_STATUS_CODE" 
	ADD CONSTRAINT "AVL_STATUS_CODE_PK" PRIMARY KEY
		("STATUS_CODE");



------------------------------------------------
-- DDL Statements for table "XSR     "."RETAIN_CNTRY_CODE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."RETAIN_CNTRY_CODE"  (
		  "RETAIN_NODE" VARCHAR(6) NOT NULL , 
		  "RETAIN_CNTRY_CODE" VARCHAR(3) NOT NULL , 
		  "CENTER" VARCHAR(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."RETAIN_CNTRY_CODE" IS 'Used to define center (queue/center) differences between RETAIN nodes by country code.  This is primarly used when a RETAIN nodes goes down and we are on a node that we normally do not run against.';


-- DDL Statements for primary key on Table "XSR     "."RETAIN_CNTRY_CODE"

ALTER TABLE "XSR     "."RETAIN_CNTRY_CODE" 
	ADD CONSTRAINT "RETAIN_CC_PK" PRIMARY KEY
		("RETAIN_NODE",
		 "RETAIN_CNTRY_CODE",
		 "CENTER");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ERR_TRAN"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ERR_TRAN"  (
		  "PMR_ID" BIGINT NOT NULL , 
		  "ERR_CREATE_DATE" TIMESTAMP NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "CONTACT_PHONE1" VARCHAR(19) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_LOG_01" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ERR_TRAN"

ALTER TABLE "XSR     "."PMR_ERR_TRAN" 
	ADD CONSTRAINT "PMR_ERR_TRAN_PK" PRIMARY KEY
		("ERR_CREATE_DATE",
		 "PMR_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."COMP_GROUP_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."COMP_GROUP_XREF"  (
		  "COMP_ID" VARCHAR(15) NOT NULL , 
		  "COMP_GROUP_ID" INTEGER NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) NOT NULL WITH DEFAULT USER , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."COMP_GROUP_XREF" IS 'Cross reference table between component groups and the components that belong to them.';


-- DDL Statements for primary key on Table "XSR     "."COMP_GROUP_XREF"

ALTER TABLE "XSR     "."COMP_GROUP_XREF" 
	ADD CONSTRAINT "COMP_GRP_XRE_PK" PRIMARY KEY
		("COMP_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."COMP_GROUP"
------------------------------------------------
 
 CREATE TABLE "XSR     "."COMP_GROUP"  (
		  "COMP_GROUP_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(130) , 
		  "STATUS" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."COMP_GROUP" IS 'Used to group like components so that business rules can be managed at a more coarse grain level.  This makes manageing the many compents much more manageable.';


-- DDL Statements for primary key on Table "XSR     "."COMP_GROUP"

ALTER TABLE "XSR     "."COMP_GROUP" 
	ADD CONSTRAINT "COMP_GROUP_PK" PRIMARY KEY
		("COMP_GROUP_ID");


-- DDL Statements for indexes on Table "XSR     "."COMP_GROUP"

CREATE UNIQUE INDEX "XSR     "."COMP_GROUP_IDX1" ON "XSR     "."COMP_GROUP" 
		("NAME" ASC) PCTFREE 0 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."COMP_GROUP_COMP_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."COMP_GROUP_COMP_XREF"  (
		  "COMP_GROUP_ID" INTEGER NOT NULL , 
		  "PROD_ID" VARGRAPHIC(80) NOT NULL , 
		  "COMP_ID" VARGRAPHIC(15) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."COMP_GROUP_COMP_XREF"

ALTER TABLE "XSR     "."COMP_GROUP_COMP_XREF" 
	ADD CONSTRAINT "CMP_GRP_CMP_XRF_PK" PRIMARY KEY
		("COMP_GROUP_ID",
		 "PROD_ID",
		 "COMP_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."AVL_OPERATING_SYSTEM"
------------------------------------------------
 
 CREATE TABLE "XSR     "."AVL_OPERATING_SYSTEM"  (
		  "OS_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(256) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."AVL_OPERATING_SYSTEM"

ALTER TABLE "XSR     "."AVL_OPERATING_SYSTEM" 
	ADD CONSTRAINT "AVL_OS_PK" PRIMARY KEY
		("OS_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ROUTE_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ROUTE_LOG"  (
		  "ROUTE_LOG_ID" INTEGER NOT NULL , 
		  "ROUTE_DATETIME" TIMESTAMP NOT NULL , 
		  "ROUTE_RULE" VARCHAR(40) NOT NULL , 
		  "ROUTE_ID" VARCHAR(128) , 
		  "REASON" VARGRAPHIC(256) NOT NULL , 
		  "CRITERIA_MATCHED" VARGRAPHIC(256) , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(80) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(40) NOT NULL , 
		  "CREATE_FLAG" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "PMR_SEVERITY" CHAR(1) NOT NULL , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "OS_ID" INTEGER , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_LOG_01" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ROUTE_LOG"

ALTER TABLE "XSR     "."PMR_ROUTE_LOG" 
	ADD CONSTRAINT "PMR_ROUTE_LOG_PK" PRIMARY KEY
		("ROUTE_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."APP_TYPE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."APP_TYPE"  (
		  "APP_ID" INTEGER NOT NULL , 
		  "APP_TYPE" VARCHAR(20) NOT NULL , 
		  "DESCRIPTION" VARCHAR(80) )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."APP_TYPE" IS 'Describe applications that interact w/ xSR';


-- DDL Statements for primary key on Table "XSR     "."APP_TYPE"

ALTER TABLE "XSR     "."APP_TYPE" 
	ADD CONSTRAINT "APP_TYPE_PK" PRIMARY KEY
		("APP_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."AUDIT_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."AUDIT_LOG"  (
		  "AUDIT_LOG_ID" INTEGER NOT NULL , 
		  "TIME_STAMP" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "USER_ID" VARGRAPHIC(254) NOT NULL , 
		  "APP_ID" INTEGER NOT NULL , 
		  "SRC_APP_ID" INTEGER NOT NULL WITH DEFAULT 0 , 
		  "ACTION_ID" INTEGER NOT NULL , 
		  "OBJ_ID" VARCHAR(128) NOT NULL , 
		  "OBJ_TYPE_ID" INTEGER NOT NULL , 
		  "DESCRIPTION" VARGRAPHIC(510) )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."AUDIT_LOG" IS 'Used for general audit logging for any application.';


-- DDL Statements for primary key on Table "XSR     "."AUDIT_LOG"

ALTER TABLE "XSR     "."AUDIT_LOG" 
	ADD CONSTRAINT "AUDIT_LOG_PK" PRIMARY KEY
		("AUDIT_LOG_ID");


-- DDL Statements for indexes on Table "XSR     "."AUDIT_LOG"

CREATE INDEX "XSR     "."AUDIT_LOG_IDX01" ON "XSR     "."AUDIT_LOG" 
		("APP_ID" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."AUDIT_OBJ_TYPE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."AUDIT_OBJ_TYPE"  (
		  "OBJ_TYPE_ID" INTEGER NOT NULL , 
		  "DESCRIPTION" VARCHAR(80) NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."AUDIT_OBJ_TYPE" IS 'Used for describing the action object types availble for logging.';


-- DDL Statements for primary key on Table "XSR     "."AUDIT_OBJ_TYPE"

ALTER TABLE "XSR     "."AUDIT_OBJ_TYPE" 
	ADD CONSTRAINT "AUDIT_ACT_OBJ_PK" PRIMARY KEY
		("OBJ_TYPE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."AUDIT_ACTION_TYPE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."AUDIT_ACTION_TYPE"  (
		  "ACTION_ID" INTEGER NOT NULL , 
		  "DESCRIPTION" VARCHAR(80) NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."AUDIT_ACTION_TYPE" IS 'Used for describing the action types availble for logging.';


-- DDL Statements for primary key on Table "XSR     "."AUDIT_ACTION_TYPE"

ALTER TABLE "XSR     "."AUDIT_ACTION_TYPE" 
	ADD CONSTRAINT "AUDIT_ACT_PK" PRIMARY KEY
		("ACTION_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."USER_AUTH"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_AUTH"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "RIGHT_MASK" VARCHAR(256) NOT NULL , 
		  "IS_LOCKED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_AUTH" IS 'This table contains a rights mask that identifies an XSR users rights within the application.';


-- DDL Statements for primary key on Table "XSR     "."USER_AUTH"

ALTER TABLE "XSR     "."USER_AUTH" 
	ADD CONSTRAINT "CONTACT_AUTH_PK" PRIMARY KEY
		("USER_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PROFILE_REPORT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PROFILE_REPORT"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "RPT_COL1" VARCHAR(50) , 
		  "RPT_COL2" VARCHAR(50) , 
		  "RPT_COL3" VARCHAR(50) , 
		  "RPT_COL4" VARCHAR(50) , 
		  "RPT_COL5" VARCHAR(50) , 
		  "RPT_COL6" VARCHAR(50) , 
		  "RPT_COL7" VARCHAR(50) , 
		  "RPT_COL8" VARCHAR(50) , 
		  "RPT_COL9" VARCHAR(50) , 
		  "RPT_COL10" VARCHAR(50) , 
		  "RPT_FILTER" VARCHAR(30) , 
		  "RPT_OPEN" INTEGER , 
		  "RPT_CLOSED" INTEGER , 
		  "RPT_DATE_OPT" TIMESTAMP , 
		  "RPT_DATE_FROM" TIMESTAMP , 
		  "RPT_DATE_TO" TIMESTAMP , 
		  "SORT_COL" VARCHAR(50) , 
		  "SORT_DIRECTION" SMALLINT , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) NOT NULL , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "RPT_NAME" VARGRAPHIC(255) )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PROFILE_REPORT" IS 'USED TO PERSIST THE COLUMNS DISPLAYED ON THE SEARCH RESULTS PAGE.  USER HAS THE ABILITY TO SELECT UP TO 10 COLUMNS AND HOW TO SORT THE DATA.';


-- DDL Statements for primary key on Table "XSR     "."USER_PROFILE_REPORT"

ALTER TABLE "XSR     "."USER_PROFILE_REPORT" 
	ADD CONSTRAINT "USR_PROF_RPT_PK" PRIMARY KEY
		("USER_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."CFG_PROPERTIES"
------------------------------------------------
 
 CREATE TABLE "XSR     "."CFG_PROPERTIES"  (
		  "PROPERTIES_ID" INTEGER NOT NULL , 
		  "KEY" VARCHAR(100) NOT NULL , 
		  "VALUE" VARCHAR(1024) )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."CFG_PROPERTIES"

ALTER TABLE "XSR     "."CFG_PROPERTIES" 
	ADD CONSTRAINT "PROPERTIES_PK" PRIMARY KEY
		("PROPERTIES_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ADV_ROUTE_SET"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ADV_ROUTE_SET"  (
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(80) , 
		  "COMP_GROUP_ID" INTEGER NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PAR_S_PK" PRIMARY KEY
		("ROUTE_SET_ID");


-- DDL Statements for unique constraints on Table "XSR     "."PMR_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PMR_ADV_RTE_SET_UQ" UNIQUE
		("COMP_GROUP_ID");


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"  (
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "TIME_ZONE_ID" VARCHAR(64) NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "START_TIME" TIME , 
		  "END_TIME" TIME , 
		  "MON" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "TUE" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "WED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "THU" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "FRI" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SAT" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SUN" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PAR_TIME_SLOT_PK" PRIMARY KEY
		("ROUTE_TIME_SLOT_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS"  (
		  "ROUTE_EXCL_DAY_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "EXCL_DATE" DATE NOT NULL , 
		  "REPEAT_YEARLY" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PAR_EXCL_DAYS_PK" PRIMARY KEY
		("ROUTE_EXCL_DAY_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ADV_ROUTE_KEYWORD"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ADV_ROUTE_KEYWORD"  (
		  "ROUTE_KEYWORD_ID" INTEGER NOT NULL , 
		  "ROUTE_KEYWORD_LIST_ID" INTEGER NOT NULL , 
		  "KEYWORD" VARGRAPHIC(80) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ADV_ROUTE_KEYWORD"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_KEYWORD" 
	ADD CONSTRAINT "PAR_KW_PK" PRIMARY KEY
		("ROUTE_KEYWORD_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST"  (
		  "ROUTE_KEYWORD_LIST_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST" 
	ADD CONSTRAINT "PAR_KW_LIST_PK" PRIMARY KEY
		("ROUTE_KEYWORD_LIST_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_T_ADV_ROUTE_SET"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_T_ADV_ROUTE_SET"  (
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "PREV_ROUTE_SET_ID" INTEGER , 
		  "NAME" VARGRAPHIC(80) , 
		  "COMP_GROUP_ID" INTEGER NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_T_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PTAR_S_PK" PRIMARY KEY
		("ROUTE_SET_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"  (
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "TIME_ZONE_ID" VARCHAR(64) NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "START_TIME" TIME , 
		  "END_TIME" TIME , 
		  "MON" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "TUE" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "WED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "THU" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "FRI" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SAT" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SUN" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PTAR_TIME_SLOT_PK" PRIMARY KEY
		("ROUTE_TIME_SLOT_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST"  (
		  "ROUTE_KEYWORD_LIST_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST" 
	ADD CONSTRAINT "PTAR_KW_LIST_PK" PRIMARY KEY
		("ROUTE_KEYWORD_LIST_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_T_ADV_ROUTE_KEYWORD"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_T_ADV_ROUTE_KEYWORD"  (
		  "ROUTE_KEYWORD_ID" INTEGER NOT NULL , 
		  "ROUTE_KEYWORD_LIST_ID" INTEGER NOT NULL , 
		  "KEYWORD" VARGRAPHIC(80) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_T_ADV_ROUTE_KEYWORD"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_KEYWORD" 
	ADD CONSTRAINT "PTAR_KW_PK" PRIMARY KEY
		("ROUTE_KEYWORD_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS"  (
		  "ROUTE_EXCL_DAY_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "EXCL_DATE" DATE NOT NULL , 
		  "REPEAT_YEARLY" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PTAR_EXCL_DAY_PK" PRIMARY KEY
		("ROUTE_EXCL_DAY_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_A_ADV_ROUTE_SET"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_A_ADV_ROUTE_SET"  (
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "PREV_ROUTE_SET_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(80) , 
		  "COMP_GROUP_ID" INTEGER NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_A_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PAAR_S_PK" PRIMARY KEY
		("ROUTE_SET_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST"  (
		  "ROUTE_KEYWORD_LIST_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST" 
	ADD CONSTRAINT "PAAR_KW_LIST_PK" PRIMARY KEY
		("ROUTE_KEYWORD_LIST_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_A_ADV_ROUTE_KEYWORD"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_A_ADV_ROUTE_KEYWORD"  (
		  "ROUTE_KEYWORD_ID" INTEGER NOT NULL , 
		  "ROUTE_KEYWORD_LIST_ID" INTEGER NOT NULL , 
		  "KEYWORD" VARGRAPHIC(80) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_A_ADV_ROUTE_KEYWORD"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_KEYWORD" 
	ADD CONSTRAINT "PAAR_KW_PK" PRIMARY KEY
		("ROUTE_KEYWORD_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"  (
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "TIME_ZONE_ID" VARCHAR(64) NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "START_TIME" TIME , 
		  "END_TIME" TIME , 
		  "MON" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "TUE" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "WED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "THU" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "FRI" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SAT" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SUN" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PAAR_TIME_SLOT_PK" PRIMARY KEY
		("ROUTE_TIME_SLOT_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS"  (
		  "ROUTE_EXCL_DAY_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER , 
		  "EXCL_DATE" DATE NOT NULL , 
		  "REPEAT_YEARLY" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PAAR_EXCL_DAY_PK" PRIMARY KEY
		("ROUTE_EXCL_DAY_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_PREM_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_PREM_ROUTE"  (
		  "ROUTE_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "PLATFORM_ID" INTEGER , 
		  "ROUTE_TIME_SLOT_ID" INTEGER , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_PREM_ROUTE"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE" 
	ADD CONSTRAINT "PMR_PREM_RTE_PK" PRIMARY KEY
		("ROUTE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_PREM_ROUTE_SET"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_PREM_ROUTE_SET"  (
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "NAME" VARGRAPHIC(80) , 
		  "PREM_SUPPORT_TYPE" VARCHAR(40) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_PREM_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_SET" 
	ADD CONSTRAINT "PPR_S_PK" PRIMARY KEY
		("ROUTE_SET_ID");


-- DDL Statements for unique constraints on Table "XSR     "."PMR_PREM_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_SET" 
	ADD CONSTRAINT "PPRS_SPPRT_TYPE_1" UNIQUE
		("PREM_SUPPORT_TYPE");


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"  (
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "TIME_ZONE_ID" VARCHAR(64) NOT NULL , 
		  "NAME" VARGRAPHIC(128) , 
		  "START_TIME" TIME , 
		  "END_TIME" TIME , 
		  "MON" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "TUE" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "WED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "THU" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "FRI" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SAT" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SUN" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PPR_TIME_SLOT_PK" PRIMARY KEY
		("ROUTE_TIME_SLOT_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS"  (
		  "ROUTE_EXCL_DAY_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER NOT NULL , 
		  "EXCL_DATE" DATE NOT NULL , 
		  "REPEAT_YEARLY" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PPR_EXCL_DAYS_PK" PRIMARY KEY
		("ROUTE_EXCL_DAY_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PROD_FAVORITES"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PROD_FAVORITES"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "PROD_ID" VARGRAPHIC(40) NOT NULL , 
		  "COMP_ID" VARCHAR(15) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PROD_FAVORITES" IS 'PART OF THE XSR USER PROFILE THAT TRACKS THE LIST OF PRODUCTS THAT THE USERS HAS ADDED TO THEIR FAVORITES LIST.';


-- DDL Statements for primary key on Table "XSR     "."USER_PROD_FAVORITES"

ALTER TABLE "XSR     "."USER_PROD_FAVORITES" 
	ADD CONSTRAINT "USR_PROD_FAV_PK" PRIMARY KEY
		("USER_ID",
		 "PROD_ID",
		 "COMP_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."AVL_REQUEST_TYPE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."AVL_REQUEST_TYPE"  (
		  "AVL_REQUEST_TYPE_ID" SMALLINT NOT NULL , 
		  "REQUEST_TYPE" VARCHAR(100) , 
		  "DESCRIPTION" VARCHAR(255) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."AVL_REQUEST_TYPE" IS 'SYS109 XSR shall require the user to select the subtype of the request, from Software Defect  Support (SDS), Preventative Maintenance (PMA), Installation (INS), Software Usage Support (SUS), or Account Support Management (AMA).
';


-- DDL Statements for primary key on Table "XSR     "."AVL_REQUEST_TYPE"

ALTER TABLE "XSR     "."AVL_REQUEST_TYPE" 
	ADD CONSTRAINT "AVL_REQST_TYPE_PK" PRIMARY KEY
		("AVL_REQUEST_TYPE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_RETRY_TEXT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_RETRY_TEXT"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "TEXT_BLOCK" VARGRAPHIC(15000) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_PG32K" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_RETRY_TEXT" IS 'Contains text blocks associated to a  PMRs in retry state.';


-- DDL Statements for primary key on Table "XSR     "."PMR_RETRY_TEXT"

ALTER TABLE "XSR     "."PMR_RETRY_TEXT" 
	ADD CONSTRAINT "PMR_RETRY_TEXT_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");



------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PMR_RETRY_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PMR_RETRY_XREF"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "COM_SRC_APPL" VARCHAR(40) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PMR_RETRY_XREF" IS 'MAINTAINS RELEASE_LEVELATIONSHIP BETWEEN USERS AND PMR''S IN DRAFT STATE.';


-- DDL Statements for primary key on Table "XSR     "."USER_PMR_RETRY_XREF"

ALTER TABLE "XSR     "."USER_PMR_RETRY_XREF" 
	ADD CONSTRAINT "USR_PMR_RTY_X_PK" PRIMARY KEY
		("USER_ID",
		 "SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."USER_PMR_RETRY_XREF"

CREATE INDEX "XSR     "."USR_PMR_RTY_X_IDX1" ON "XSR     "."USER_PMR_RETRY_XREF" 
		("USER_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PMR_RETRY_XREF"

CREATE INDEX "XSR     "."USR_PMR_RTY_X_IDX2" ON "XSR     "."USER_PMR_RETRY_XREF" 
		("USER_ID" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PMR_RETRY_XREF"

CREATE INDEX "XSR     "."USR_PMR_RTY_X_IDX3" ON "XSR     "."USER_PMR_RETRY_XREF" 
		("COM_SRC_APPL" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_DRAFT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_DRAFT"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "PMR_NUM" CHAR(7) , 
		  "BRANCH" CHAR(3) , 
		  "RETAIN_CNTRY_CODE" CHAR(3) , 
		  "STATE" INTEGER , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "PARTNER_INIT" SMALLINT NOT NULL WITH DEFAULT 0 )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_DRAFT" IS 'Primary PMR draft table used to capture PMRs in draft state.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT"."STATE" IS 'The state identifies the current state of a PMR. This is used to determine which set PMR tables
contains the PMR.  The data is distributed based on state to resolve possible contention.  0 - Normal,
1 - Draft, 2 - In-progress';


-- DDL Statements for primary key on Table "XSR     "."PMR_DRAFT"

ALTER TABLE "XSR     "."PMR_DRAFT" 
	ADD CONSTRAINT "PMR_DRAFT_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT"

CREATE INDEX "XSR     "."PMR_DRAFT_IDX01" ON "XSR     "."PMR_DRAFT" 
		("CREATE_DATETIME" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PMR_DRAFT_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PMR_DRAFT_XREF"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "COM_SRC_APPL" VARCHAR(40) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PMR_DRAFT_XREF" IS 'MAINTAINS RELEASE_LEVELATIONSHIP BETWEEN USERS AND PMR''S IN DRAFT STATE.';


-- DDL Statements for primary key on Table "XSR     "."USER_PMR_DRAFT_XREF"

ALTER TABLE "XSR     "."USER_PMR_DRAFT_XREF" 
	ADD CONSTRAINT "USR_PMR_DRFT_X_PK" PRIMARY KEY
		("USER_ID",
		 "SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."USER_PMR_DRAFT_XREF"

CREATE INDEX "XSR     "."USR_PMR_DRF_X_IDX1" ON "XSR     "."USER_PMR_DRAFT_XREF" 
		("USER_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PMR_DRAFT_XREF"

CREATE INDEX "XSR     "."USR_PMR_DRF_X_IDX2" ON "XSR     "."USER_PMR_DRAFT_XREF" 
		("COM_SRC_APPL" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_SIG_LINES"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_SIG_LINES"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SIG_LINE_NUM" SMALLINT NOT NULL , 
		  "SIG_LINE" VARCHAR(72) NOT NULL , 
		  "PMR_ACTION" CHAR(3) , 
		  "PMR_ACTION_DATETIME" TIMESTAMP , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_SIG_LINES" IS 'Maintains signature lines associated to an active PMR.';


-- DDL Statements for primary key on Table "XSR     "."PMR_SIG_LINES"

ALTER TABLE "XSR     "."PMR_SIG_LINES" 
	ADD CONSTRAINT "PMR_SIG_LN_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE",
		 "SIG_LINE_NUM");


-- DDL Statements for indexes on Table "XSR     "."PMR_SIG_LINES"

CREATE INDEX "XSR     "."PMR_HEADER_SL_IDX1" ON "XSR     "."PMR_SIG_LINES" 
		("UPDATE_USER" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_SIG_LINES"

CREATE INDEX "XSR     "."PMR_HEADER_SL_IDX2" ON "XSR     "."PMR_SIG_LINES" 
		("CREATE_DATETIME" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PMR_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PMR_XREF"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "COM_SRC_APPL" VARCHAR(40) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PMR_XREF" IS 'MAINTAINS RELEASE_LEVELATIONSHIP BETWEEN USERS AND PMR''S IN DRAFT STATE.';


-- DDL Statements for primary key on Table "XSR     "."USER_PMR_XREF"

ALTER TABLE "XSR     "."USER_PMR_XREF" 
	ADD CONSTRAINT "USR_PMR_XREF_PK" PRIMARY KEY
		("USER_ID",
		 "SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."USER_PMR_XREF"

CREATE INDEX "XSR     "."USR_PMR_XREF_IDX1" ON "XSR     "."USER_PMR_XREF" 
		("USER_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PMR_XREF"

CREATE INDEX "XSR     "."USR_PMR_XREF_IDX2" ON "XSR     "."USER_PMR_XREF" 
		("USER_ID" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PMR_XREF"

CREATE INDEX "XSR     "."USR_PMR_XREF_IDX3" ON "XSR     "."USER_PMR_XREF" 
		("COM_SRC_APPL" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_TEXT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_TEXT"  (
		  "PMR_TEXT_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SIG_LINE" VARCHAR(72) , 
		  "TEXT_BLOCK" VARGRAPHIC(15000) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "USER" VARCHAR(23) )   
		 IN "XSR1_DATA_PG32K" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_TEXT"

ALTER TABLE "XSR     "."PMR_TEXT" 
	ADD CONSTRAINT "PMR_TEXT_PK" PRIMARY KEY
		("PMR_TEXT_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."ADMIN_AUTH"
------------------------------------------------
 
 CREATE TABLE "XSR     "."ADMIN_AUTH"  (
		  "BLUEGROUP" VARCHAR(32) NOT NULL , 
		  "ADMIN_RIGHTS_ID" INTEGER NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."ADMIN_AUTH"

ALTER TABLE "XSR     "."ADMIN_AUTH" 
	ADD CONSTRAINT "ADMIN_AUTH_PK" PRIMARY KEY
		("BLUEGROUP",
		 "ADMIN_RIGHTS_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."ADMIN_RIGHTS"
------------------------------------------------
 
 CREATE TABLE "XSR     "."ADMIN_RIGHTS"  (
		  "ADMIN_RIGHTS_ID" INTEGER NOT NULL , 
		  "APP_ID" INTEGER NOT NULL , 
		  "RIGHT" VARCHAR(64) NOT NULL , 
		  "DESCRIPTION" VARCHAR(80) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."ADMIN_RIGHTS"

ALTER TABLE "XSR     "."ADMIN_RIGHTS" 
	ADD CONSTRAINT "ADMIN_RIGHTS_PK" PRIMARY KEY
		("ADMIN_RIGHTS_ID");


-- DDL Statements for unique constraints on Table "XSR     "."ADMIN_RIGHTS"

ALTER TABLE "XSR     "."ADMIN_RIGHTS" 
	ADD CONSTRAINT "ADMIN_RIGHT_UC" UNIQUE
		("APP_ID",
		 "RIGHT");


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_COUNTRY_ORG_CONFIG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_COUNTRY_ORG_CONFIG"  (
		  "ORG_ID" INTEGER NOT NULL , 
		  "ISO_CNTRY_CODE_2" CHAR(2) NOT NULL , 
		  "ALLOW_ATTACHMENTS" SMALLINT , 
		  "ALLOW_SEV1" SMALLINT , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_COUNTRY_ORG_CONFIG" IS 'Holds configuration parameters associated to PMRs by country and organization.';


-- DDL Statements for primary key on Table "XSR     "."PMR_COUNTRY_ORG_CONFIG"

ALTER TABLE "XSR     "."PMR_COUNTRY_ORG_CONFIG" 
	ADD CONSTRAINT "PMR_CTRYORGCFG_PK" PRIMARY KEY
		("ISO_CNTRY_CODE_2",
		 "ORG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_SYNC"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_SYNC"  (
		  "SYNC_ID" INTEGER NOT NULL , 
		  "PMR_NUM" CHAR(7) NOT NULL , 
		  "BRANCH" CHAR(3) NOT NULL , 
		  "RETAIN_CNTRY_CODE" CHAR(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_SYNC"

ALTER TABLE "XSR     "."PMR_SYNC" 
	ADD CONSTRAINT "PMR_SYNC_PK" PRIMARY KEY
		("SYNC_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."BP_SITE_PMR_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."BP_SITE_PMR_XREF"  (
		  "BP_SITE_ID" INTEGER NOT NULL , 
		  "SUPPORT_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SUPPORT_RELATIONSHIP_TYPE" SMALLINT NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."BP_SITE_PMR_XREF" IS 'CROSS REFERENCE TABLE IDENTIFYING BUSINESS PARTNERS AND THEIR CURRENT PMRS.';


-- DDL Statements for primary key on Table "XSR     "."BP_SITE_PMR_XREF"

ALTER TABLE "XSR     "."BP_SITE_PMR_XREF" 
	ADD CONSTRAINT "BP_PMR_XREF_PK" PRIMARY KEY
		("BP_SITE_ID",
		 "SUPPORT_ID",
		 "SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");



------------------------------------------------
-- DDL Statements for table "XSR     "."BP_SITE_PMR_RETRY_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."BP_SITE_PMR_RETRY_XREF"  (
		  "BP_SITE_ID" INTEGER NOT NULL , 
		  "SUPPORT_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "ACTION" CHAR(1) NOT NULL , 
		  "SUPPORT_RELATIONSHIP_TYPE" SMALLINT , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."BP_SITE_PMR_RETRY_XREF" IS 'CROSS REFERENCE TABLE IDENTIFYING BUSINESS PARTNERS AND THEIR PMRS IN RETRY STATUS.';


-- DDL Statements for primary key on Table "XSR     "."BP_SITE_PMR_RETRY_XREF"

ALTER TABLE "XSR     "."BP_SITE_PMR_RETRY_XREF" 
	ADD CONSTRAINT "BP_PMR_RETRY_X_PK" PRIMARY KEY
		("BP_SITE_ID",
		 "SUPPORT_ID",
		 "SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");



------------------------------------------------
-- DDL Statements for table "XSR     "."BP_SITE_PMR_DRAFT_XREF"
------------------------------------------------
 
 CREATE TABLE "XSR     "."BP_SITE_PMR_DRAFT_XREF"  (
		  "BP_SITE_ID" INTEGER NOT NULL , 
		  "SUPPORT_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SUPPORT_RELATIONSHIP_TYPE" SMALLINT , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."BP_SITE_PMR_DRAFT_XREF" IS 'CROSS REFERENCE TABLE IDENTIFYING BUSINESS PARTNERS AND THEIR PMRS IN DRAFT STATUS.';


-- DDL Statements for primary key on Table "XSR     "."BP_SITE_PMR_DRAFT_XREF"

ALTER TABLE "XSR     "."BP_SITE_PMR_DRAFT_XREF" 
	ADD CONSTRAINT "BP_PMR_DRAFT_X_PK" PRIMARY KEY
		("BP_SITE_ID",
		 "SUPPORT_ID",
		 "SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_BASIC_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_BASIC_ROUTE"  (
		  "BASIC_ROUTE_ID" INTEGER NOT NULL , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) NOT NULL , 
		  "PLATFORM_ID" INTEGER NOT NULL , 
		  "COMP_ID" VARCHAR(15) , 
		  "COMP_ID_RELEASE" CHAR(3) , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_BASIC_ROUTE"

ALTER TABLE "XSR     "."PMR_BASIC_ROUTE" 
	ADD CONSTRAINT "PMR_BASIC_BASIC_PK" PRIMARY KEY
		("BASIC_ROUTE_ID");


-- DDL Statements for indexes on Table "XSR     "."PMR_BASIC_ROUTE"

CREATE UNIQUE INDEX "XSR     "."PMR_RTE_BASIC_UI1" ON "XSR     "."PMR_BASIC_ROUTE" 
		("RETAIN_COUNTRY_CODE" ASC,
		 "PLATFORM_ID" ASC,
		 "COMP_ID" ASC,
		 "COMP_ID_RELEASE" ASC) PCTFREE 0 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PROFILE_NOTIFICATION"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PROFILE_NOTIFICATION"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "NOTIFY_BY_EMAIL" SMALLINT , 
		  "NTFY_1_UPDT" INTEGER , 
		  "NTFY_1_CLOSE" INTEGER , 
		  "NTFY_2_UPDT" INTEGER , 
		  "NTFY_2_CLOSE" INTEGER , 
		  "NTFY_3_UPDT" INTEGER , 
		  "NTFY_3_CLOSE" INTEGER , 
		  "NTFY_4_UPDT" INTEGER , 
		  "NTFY_4_CLOSE" INTEGER , 
		  "NTFY_CALLER" INTEGER , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PROFILE_NOTIFICATION" IS 'PART OF THE XSR USER PROFILE THAT TRACKS THE USERS NOTIFICATION PREFERENCES.';


-- DDL Statements for primary key on Table "XSR     "."USER_PROFILE_NOTIFICATION"

ALTER TABLE "XSR     "."USER_PROFILE_NOTIFICATION" 
	ADD CONSTRAINT "USR_PROF_NTF_PK" PRIMARY KEY
		("USER_ID");


-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX1" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_2_CLOSE" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX2" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_1_UPDT" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX3" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_1_CLOSE" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX4" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_2_UPDT" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX5" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_3_UPDT" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX6" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_3_CLOSE" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX7" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_4_UPDT" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE_NOTIFICATION"

CREATE INDEX "XSR     "."USR_PRF_NTF_IDX8" ON "XSR     "."USER_PROFILE_NOTIFICATION" 
		("NTFY_4_CLOSE" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_COUNTRY_CONFIG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_COUNTRY_CONFIG"  (
		  "ISO_CNTRY_CODE_2" CHAR(2) NOT NULL , 
		  "RETAIN_CNTRY_CODE" CHAR(3) , 
		  "XSR_ENABLED" SMALLINT , 
		  "ADMIN_EMAIL_ADDRESS" VARCHAR(254) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_COUNTRY_CONFIG" IS 'Holds configuration parameters associated to PMRs by country.';


-- DDL Statements for primary key on Table "XSR     "."PMR_COUNTRY_CONFIG"

ALTER TABLE "XSR     "."PMR_COUNTRY_CONFIG" 
	ADD CONSTRAINT "PMR_COUNTRY_CFG_PK" PRIMARY KEY
		("ISO_CNTRY_CODE_2");



------------------------------------------------
-- DDL Statements for table "XSR     "."USER_PROFILE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_PROFILE"  (
		  "USER_ID" BIGINT NOT NULL , 
		  "CONTACT_ID" BIGINT NOT NULL , 
		  "CONTACT_METHOD" VARCHAR(40) NOT NULL WITH DEFAULT 'email' , 
		  "SUPPORT_AGRMNT_VIEW_PREF" CHAR(1) , 
		  "AUP_ACCEPTED_FLAG" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "AUP_ACCEPTED_DATE" DATE , 
		  "PMR_HOME_DISPLAY_CNT" INTEGER , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."USER_PROFILE" IS 'PRIMARY TABLE FOR THE XSR USER PROFILE INFORMATION.';


-- DDL Statements for primary key on Table "XSR     "."USER_PROFILE"

ALTER TABLE "XSR     "."USER_PROFILE" 
	ADD CONSTRAINT "USR_PROFILE_PK" PRIMARY KEY
		("USER_ID");


-- DDL Statements for indexes on Table "XSR     "."USER_PROFILE"

CREATE UNIQUE INDEX "XSR     "."USER_PROFILE_IDX1" ON "XSR     "."USER_PROFILE" 
		("CONTACT_ID" ASC) PCTFREE 0 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_COUNTRY_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_COUNTRY_ROUTE"  (
		  "COUNTRY_ROUTE_ID" INTEGER NOT NULL , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "PLATFORM_ID" INTEGER , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_COUNTRY_ROUTE"

ALTER TABLE "XSR     "."PMR_COUNTRY_ROUTE" 
	ADD CONSTRAINT "PMR_CNTRY_ROUTE_PK" PRIMARY KEY
		("COUNTRY_ROUTE_ID");


-- DDL Statements for indexes on Table "XSR     "."PMR_COUNTRY_ROUTE"

CREATE UNIQUE INDEX "XSR     "."PMR_CNTRY_RTE_IDX1" ON "XSR     "."PMR_COUNTRY_ROUTE" 
		("RETAIN_COUNTRY_CODE" ASC,
		 "PLATFORM_ID" ASC) PCTFREE 0 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ENT_EXC_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ENT_EXC_ROUTE"  (
		  "EXC_ROUTE_ID" INTEGER NOT NULL , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "PLATFORM_ID" INTEGER , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ENT_EXC_ROUTE"

ALTER TABLE "XSR     "."PMR_ENT_EXC_ROUTE" 
	ADD CONSTRAINT "PMR_ENT_EXC_RTE_PK" PRIMARY KEY
		("EXC_ROUTE_ID");


-- DDL Statements for indexes on Table "XSR     "."PMR_ENT_EXC_ROUTE"

CREATE UNIQUE INDEX "XSR     "."PMR_ENTEX_RTE_IDX1" ON "XSR     "."PMR_ENT_EXC_ROUTE" 
		("RETAIN_COUNTRY_CODE" ASC,
		 "PLATFORM_ID" ASC) PCTFREE 0 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_DRAFT_RETAIN_INFO"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SW_HD" CHAR(1) , 
		  "RETAIN_NODE" VARCHAR(6) , 
		  "STATUS" CHAR(7) , 
		  "RETAIN_CALLER_TYPE" CHAR(1) , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "CUST_NAME_NLS" VARGRAPHIC(28) , 
		  "CONTACT_NAME_NLS" VARGRAPHIC(30) , 
		  "SUPPORT_LEVEL" CHAR(1) , 
		  "QUEUE" CHAR(6) , 
		  "CENTER" CHAR(3) , 
		  "NEXT_QUEUE" CHAR(6) , 
		  "NEXT_CENTER" CHAR(3) , 
		  "REQUEST_TYPE_ID" SMALLINT , 
		  "PROD_ID" VARCHAR(40) , 
		  "PROD_ID_VERSION" VARCHAR(8) , 
		  "COMP_ID" VARCHAR(15) , 
		  "COMP_ID_RELEASE" VARCHAR(3) , 
		  "RELEASE_LEVEL" VARCHAR(3) , 
		  "SEVERITY" CHAR(1) , 
		  "SYSTEM_DOWN" CHAR(1) , 
		  "APAR_NUM" CHAR(7) , 
		  "PRIORITY_PG" CHAR(3) , 
		  "CALL_CAT" CHAR(3) , 
		  "CUPRIMD" CHAR(1) , 
		  "FIRST_NAME" VARGRAPHIC(40) , 
		  "LAST_NAME" VARGRAPHIC(40) , 
		  "PHONE_NUM" VARGRAPHIC(40) , 
		  "PHONE_EXT" VARGRAPHIC(40) , 
		  "ALT_PHONE_NUM" VARGRAPHIC(40) , 
		  "ALT_PHONE_EXT" VARGRAPHIC(40) , 
		  "FAX_NUM" VARGRAPHIC(40) , 
		  "PAGER" VARGRAPHIC(30) , 
		  "EMAIL_ADR" VARGRAPHIC(127) , 
		  "ALT_EMAIL_ADDRESS" VARGRAPHIC(127) , 
		  "PMR_CREATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_TIME" VARCHAR(15) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_PG32K" INDEX IN "XSR1_LOG_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO" IS 'Contains RETAIN specific information associated to a DRAFT PMR.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."ALT_PHONE_NUM" IS 'CONTACT''S PHONE NUMBER';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."APAR_NUM" IS 'APAR ASSOCIATED WITH THE PMR (IF IT EXISTS)';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."CALL_CAT" IS 'CALL CATEGORY. USED ON CREATE (PMCE)  AND UPATE (PMCE).';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."CENTER" IS 'CENTER THAT IS PAIRED WITH QUEUE';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."COMP_ID" IS 'COMPONENT ID THIS PMR IS ABOUT';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."CUPRIMD" IS 'METRICS FIELD HAVING TO DO WITH SOLUTION GIVEN.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."CUST_NAME_NLS" IS 'THE COMPANY NAME OF THE CUSTOMER';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."PHONE_NUM" IS 'COMPANY PHONE NUMBER.  THIS ONE IS NOT USED TO CALL THE PERSON BACK';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."PMR_UPDATE_DATE" IS 'LAST DATE THE PMR WAS UPDATED IN RETAIN.  THIS DATE COULD VARY FROM THE UPDATE_DATETIME STORED IN XSR BECAUSE XSR DATABASE ONLY TRACKS ACTIVITY WITHIN THE XSR APPLICATION.  THE RECORD COULD HAVE BEEN UPDATED IN RETAIN.
';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."PRIORITY_PG" IS 'PRI-PAGE.  PRIORITY PAGE IS BASCIALLY THE NUMBER OF THE CALL ON A QUEUE.  IF A CALL IS THE SECOND PRIORITY 3 CALL ON A QUEUE THE PRI-PAGE IS 302.  THIS IS LINKED WITH THE QUEUE, CENTER FIELDS.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."PROD_ID" IS 'FK TO CAM IDENTIFYING THE PRODUCT THE PMR IS OPENED UNDER.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."QUEUE" IS 'QUEUE THE PMR IS CURRENTLY ON - OR THE QUEUE THE PMR WAS ON LAST OF THERE ARE NO CALLS ON THE PMR.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."RELEASE_LEVEL" IS 'RELEASE_LEVELEASE LEVEL.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."RETAIN_NODE" IS 'THE NODE THAT IS THE SOURCE FOR THE PMR RECORD.  RS4 OR BDC.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."SEVERITY" IS 'PMR SEVERITY.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."STATUS" IS 'RETAIN FIELD: THE CURRENT STATUS - OPEN, CLOSED, ETC.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."SUPPORT_LEVEL" IS 'THIS IS ALWAYS A ''1';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_RETAIN_INFO"."SYSTEM_DOWN" IS 'INDICATES THAT A SYSTEM IS DOWN FOR A CUSTOMER.';


-- DDL Statements for primary key on Table "XSR     "."PMR_DRAFT_RETAIN_INFO"

ALTER TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO" 
	ADD CONSTRAINT "PMR_DRAFT_RI_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT_RETAIN_INFO"

CREATE INDEX "XSR     "."PMR_DRFT_RI_IDX1" ON "XSR     "."PMR_DRAFT_RETAIN_INFO" 
		("PMR_CREATE_DATE" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT_RETAIN_INFO"

CREATE INDEX "XSR     "."PMR_DRFT_RI_IDX2" ON "XSR     "."PMR_DRAFT_RETAIN_INFO" 
		("STATUS" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ATTACHMENT"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ATTACHMENT"  (
		  "ATTACHMENT_ID" BIGINT NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "DROP_FILENAME" VARGRAPHIC(256) NOT NULL , 
		  "DROP_HOST" VARGRAPHIC(127) NOT NULL , 
		  "ORIGINAL_FILENAME" VARGRAPHIC(127) NOT NULL , 
		  "FILE_SIZE" BIGINT , 
		  "SUBMITTER_CONTACT_ID" BIGINT NOT NULL , 
		  "UPLOAD_DATETIME" TIMESTAMP , 
		  "UPLOAD_REPOSITORY" VARCHAR(64) , 
		  "STATUS" SMALLINT WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) NOT NULL , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) NOT NULL , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_ATTACHMENT" IS 'Used to manage attachments associated to PMRs';


-- DDL Statements for primary key on Table "XSR     "."PMR_ATTACHMENT"

ALTER TABLE "XSR     "."PMR_ATTACHMENT" 
	ADD CONSTRAINT "PMR_ATTACHMENT_PK" PRIMARY KEY
		("ATTACHMENT_ID");


-- DDL Statements for indexes on Table "XSR     "."PMR_ATTACHMENT"

CREATE INDEX "XSR     "."PMR_ATTACHMNT_IDX1" ON "XSR     "."PMR_ATTACHMENT" 
		("SRC_TRAN_ID" ASC,
		 "SRC_APPL" ASC,
		 "SRC_NODE" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."TIME_ZONE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."TIME_ZONE"  (
		  "TIME_ZONE_ID" VARCHAR(64) NOT NULL , 
		  "DESCRIPTION" VARGRAPHIC(256) , 
		  "IEE_TIME_ZONE_ID" VARCHAR(64) , 
		  "CCMS_TIME_ZONE_ID" VARCHAR(64) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."TIME_ZONE"

ALTER TABLE "XSR     "."TIME_ZONE" 
	ADD CONSTRAINT "TIME_ZONE_PK" PRIMARY KEY
		("TIME_ZONE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_XSR_INFO"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_XSR_INFO"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SUPPORT_ID" BIGINT , 
		  "SUPPORT_OFFERING_ID" INTEGER , 
		  "MACHINE_ID" BIGINT , 
		  "PLATFORM_ID" INTEGER , 
		  "TITLE" VARGRAPHIC(512) , 
		  "DESCRIPTION" VARGRAPHIC(12288) , 
		  "CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "OPERSYS_ID" INTEGER , 
		  "CUST_TRACKING_NUM" VARGRAPHIC(20) , 
		  "OTHER_COMP_DSCR" VARGRAPHIC(255) , 
		  "INITIAL_SEVERITY" CHAR(1) , 
		  "SEVERITY_DESCRIPTION" VARGRAPHIC(512) , 
		  "PMR_CREATE_SRC_APPL" VARCHAR(40) , 
		  "LOCALE" VARCHAR(10) , 
		  "OPEN_COUNT" INTEGER , 
		  "CREATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "UPDATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_PG32K" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_XSR_INFO" IS 'Contains XSR specific information associated to a  PMR.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."ALT_CONTACT_ID" IS 'A PMR CAN HAVE A BACKUP CONTACT.  THIS IS THE CONTACT_ID OF THAT CONTACT.  THIS IS A CONTACT THAT WAS A CALLER ON THE CONTRACT AT THE TIME THE PMR WAS CREATED IN XSR.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."ALT_CONTACT_METHOD" IS 'THE METHOD BY WHICH THE ALTERNATE CONTACT IS TO BE CONTACTED.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."CONTACT_METHOD" IS 'THE METHOD BY WHICH THE CUSTOMER IS TO BE CONTACTED - EMAIL, PHONE, ETC.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."CUST_TRACKING_NUM" IS 'Allows the customer to use their own tracking number to track the PMR.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."INITIAL_SEVERITY" IS 'INITIAL SEVERITY REPORTED FOR THE PMR ';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."LOCALE" IS 'LOCALE THE PMR WAS CREATED IN.  USED PRIMARILY FOR METRICS.  WE USE THE USERS BROWSER SETTINGS TO FIGURE OUT HOW THAT MAPS TO A CCSID SO THAT WE CAN GET IT IN THE RIGHT CHARACTER SET AND ENCODING FOR RETAIN.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."OPEN_COUNT" IS 'NUMBER OF TIMES THIS PMR HAS BEEN REOPENED VIA ESR';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."OPERSYS_ID" IS 'FK TO THE TABLE THAT MAINTAINS  A LIST OF OPERATING SYSTEMS.  IDENTIFIES THE OPERATING SYSTEM WHERE THE SOFTWARE IS RUNNING.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."PMR_CREATE_SRC_APPL" IS 'Used to track pmrs that originated outside of xsr and make sure when we insert into the table, an email isn''t generated.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."SUPPORT_ID" IS 'FK TO SPPRT THAT PMR WAS OPENED UNDER.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."TITLE" IS 'TITLE OF THE PMR THAT WAS PROVIDED BY THE PERSON OPENING IT.';

COMMENT ON COLUMN "XSR     "."PMR_XSR_INFO"."UPDATE_CONTACT_ID" IS 'THE CONTACT_ID THAT LAST UPDATED THE PMR VIA XSR.';


-- DDL Statements for primary key on Table "XSR     "."PMR_XSR_INFO"

ALTER TABLE "XSR     "."PMR_XSR_INFO" 
	ADD CONSTRAINT "PMR_HEADER_XI_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_XSR_INFO"

CREATE INDEX "XSR     "."PMR_HEADER_XI_IDX1" ON "XSR     "."PMR_XSR_INFO" 
		("SUPPORT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_XSR_INFO"

CREATE INDEX "XSR     "."PMR_HEADER_XI_IDX2" ON "XSR     "."PMR_XSR_INFO" 
		("ALT_CONTACT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_XSR_INFO"

CREATE INDEX "XSR     "."PMR_HEADER_XI_IDX3" ON "XSR     "."PMR_XSR_INFO" 
		("CREATE_CONTACT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_XSR_INFO"

CREATE INDEX "XSR     "."PMR_HEADER_XI_IDX4" ON "XSR     "."PMR_XSR_INFO" 
		("UPDATE_CONTACT_ID" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_DRAFT_XSR_INFO"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_DRAFT_XSR_INFO"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SUPPORT_ID" BIGINT , 
		  "SUPPORT_OFFERING_ID" INTEGER , 
		  "MACHINE_ID" BIGINT , 
		  "PLATFORM_ID" INTEGER , 
		  "TITLE" VARGRAPHIC(512) , 
		  "DESCRIPTION" VARGRAPHIC(12288) , 
		  "CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "OPERSYS_ID" INTEGER , 
		  "CUST_TRACKING_NUM" VARGRAPHIC(20) , 
		  "OTHER_COMP_DSCR" VARGRAPHIC(255) , 
		  "INITIAL_SEVERITY" CHAR(1) , 
		  "SEVERITY_DESCRIPTION" VARGRAPHIC(512) , 
		  "LOCALE" VARCHAR(10) , 
		  "OPEN_COUNT" INTEGER , 
		  "PMR_CREATE_SRC_APPL" VARCHAR(40) , 
		  "CREATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "UPDATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "ADD_ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "REMOVE_ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "PARTNER_INIT" INTEGER , 
		  "SUBMIT_TYPE" VARCHAR(15) , 
		  "CONTACT_ID" BIGINT , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_PG32K" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_DRAFT_XSR_INFO" IS 'Contains XSR specific information associated to a DRAFT PMR.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."ALT_CONTACT_ID" IS 'A PMR CAN HAVE A BACKUP CONTACT.  THIS IS THE CONTACT_ID OF THAT CONTACT.  THIS IS A CONTACT THAT WAS A CALLER ON THE CONTRACT AT THE TIME THE PMR WAS CREATED IN XSR.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."ALT_CONTACT_METHOD" IS 'THE METHOD BY WHICH THE ALTERNATE CONTACT IS TO BE CONTACTED.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."CONTACT_ID" IS 'POINTER TO CONTACT RECORD ASSOCIATED WITH PMR.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."CUST_TRACKING_NUM" IS 'Allows the customer to use their own tracking number to track the PMR.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."INITIAL_SEVERITY" IS 'INITIAL SEVERITY REPORTED FOR THE PMR ';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."LOCALE" IS 'LOCALE THE PMR WAS CREATED IN.  USED PRIMARILY FOR METRICS.  WE USE THE USERS BROWSER SETTINGS TO FIGURE OUT HOW THAT MAPS TO A CCSID SO THAT WE CAN GET IT IN THE RIGHT CHARACTER SET AND ENCODING FOR RETAIN.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."OPEN_COUNT" IS 'NUMBER OF TIMES THIS PMR HAS BEEN REOPENED VIA ESR';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."OPERSYS_ID" IS 'FK TO THE TABLE THAT MAINTAINS  A LIST OF OPERATING SYSTEMS.  IDENTIFIES THE OPERATING SYSTEM WHERE THE SOFTWARE IS RUNNING.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."SUPPORT_ID" IS 'FK TO SPPRT THAT PMR WAS OPENED UNDER.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."TITLE" IS 'TITLE OF THE PMR THAT WAS PROVIDED BY THE PERSON OPENING IT.';

COMMENT ON COLUMN "XSR     "."PMR_DRAFT_XSR_INFO"."UPDATE_CONTACT_ID" IS 'THE CONTACT_ID THAT LAST UPDATED THE PMR VIA XSR.';


-- DDL Statements for primary key on Table "XSR     "."PMR_DRAFT_XSR_INFO"

ALTER TABLE "XSR     "."PMR_DRAFT_XSR_INFO" 
	ADD CONSTRAINT "PMR_DRAFT_XI_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT_XSR_INFO"

CREATE INDEX "XSR     "."PMR_DRFT_XI_IDX1" ON "XSR     "."PMR_DRAFT_XSR_INFO" 
		("SUPPORT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT_XSR_INFO"

CREATE INDEX "XSR     "."PMR_DRFT_XI_IDX2" ON "XSR     "."PMR_DRAFT_XSR_INFO" 
		("ALT_CONTACT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT_XSR_INFO"

CREATE INDEX "XSR     "."PMR_DRFT_XI_IDX3" ON "XSR     "."PMR_DRAFT_XSR_INFO" 
		("CREATE_CONTACT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_DRAFT_XSR_INFO"

CREATE INDEX "XSR     "."PMR_DRFT_XI_IDX4" ON "XSR     "."PMR_DRAFT_XSR_INFO" 
		("UPDATE_CONTACT_ID" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_RETRY_XSR_INFO"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_RETRY_XSR_INFO"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SUPPORT_ID" BIGINT , 
		  "SUPPORT_OFFERING_ID" INTEGER , 
		  "MACHINE_ID" BIGINT , 
		  "PLATFORM_ID" INTEGER , 
		  "TITLE" VARGRAPHIC(512) , 
		  "DESCRIPTION" VARGRAPHIC(12288) , 
		  "CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "OPERSYS_ID" INTEGER , 
		  "CUST_TRACKING_NUM" VARGRAPHIC(20) , 
		  "OTHER_COMP_DSCR" VARGRAPHIC(255) , 
		  "INITIAL_SEVERITY" CHAR(1) , 
		  "SEVERITY_DESCRIPTION" VARGRAPHIC(512) , 
		  "PMR_CREATE_SRC_APPL" VARCHAR(40) , 
		  "LOCALE" VARCHAR(10) , 
		  "OPEN_COUNT" INTEGER , 
		  "CREATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "UPDATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "ADD_ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "REMOVE_ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "PARTNER_INIT" INTEGER , 
		  "CONTACT_ID" BIGINT , 
		  "CREATE_USER" VARGRAPHIC(128) , 
		  "CREATE_DATETIME" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(128) , 
		  "UPDATE_DATETIME" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_PG32K" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_RETRY_XSR_INFO" IS 'Contains XSR specific information associated to a  PMR in retry state.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."ALT_CONTACT_ID" IS 'A PMR CAN HAVE A BACKUP CONTACT.  THIS IS THE CONTACT_ID OF THAT CONTACT.  THIS IS A CONTACT THAT WAS A CALLER ON THE CONTRACT AT THE TIME THE PMR WAS CREATED IN XSR.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."ALT_CONTACT_METHOD" IS 'THE METHOD BY WHICH THE ALTERNATE CONTACT IS TO BE CONTACTED.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."CONTACT_ID" IS 'POINTER TO CONTACT RECORD ASSOCIATED WITH PMR.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."CONTACT_METHOD" IS 'THE METHOD BY WHICH THE CUSTOMER IS TO BE CONTACTED - EMAIL, PHONE, ETC.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."CUST_TRACKING_NUM" IS 'Allows the customer to use their own tracking number to track the PMR.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."INITIAL_SEVERITY" IS 'INITIAL SEVERITY REPORTED FOR THE PMR ';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."LOCALE" IS 'LOCALE THE PMR WAS CREATED IN.  USED PRIMARILY FOR METRICS.  WE USE THE USERS BROWSER SETTINGS TO FIGURE OUT HOW THAT MAPS TO A CCSID SO THAT WE CAN GET IT IN THE RIGHT CHARACTER SET AND ENCODING FOR RETAIN.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."OPEN_COUNT" IS 'NUMBER OF TIMES THIS PMR HAS BEEN REOPENED VIA ESR';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."OPERSYS_ID" IS 'FK TO THE TABLE THAT MAINTAINS  A LIST OF OPERATING SYSTEMS.  IDENTIFIES THE OPERATING SYSTEM WHERE THE SOFTWARE IS RUNNING.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."PMR_CREATE_SRC_APPL" IS 'Used to track pmrs that originated outside of xsr and make sure when we insert into the table, an email isn''t generated.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."SUPPORT_ID" IS 'FK TO SPPRT THAT PMR WAS OPENED UNDER.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."TITLE" IS 'TITLE OF THE PMR THAT WAS PROVIDED BY THE PERSON OPENING IT.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_XSR_INFO"."UPDATE_CONTACT_ID" IS 'THE CONTACT_ID THAT LAST UPDATED THE PMR VIA XSR.';


-- DDL Statements for primary key on Table "XSR     "."PMR_RETRY_XSR_INFO"

ALTER TABLE "XSR     "."PMR_RETRY_XSR_INFO" 
	ADD CONSTRAINT "PMR_RETRY_XI_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_RETRY_XSR_INFO"

CREATE INDEX "XSR     "."PMR_RETRY_XI_IDX1" ON "XSR     "."PMR_RETRY_XSR_INFO" 
		("SUPPORT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_RETRY_XSR_INFO"

CREATE INDEX "XSR     "."PMR_RETRY_XI_IDX2" ON "XSR     "."PMR_RETRY_XSR_INFO" 
		("ALT_CONTACT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_RETRY_XSR_INFO"

CREATE INDEX "XSR     "."PMR_RETRY_XI_IDX3" ON "XSR     "."PMR_RETRY_XSR_INFO" 
		("CREATE_CONTACT_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_RETRY_XSR_INFO"

CREATE INDEX "XSR     "."PMR_RETRY_XI_IDX4" ON "XSR     "."PMR_RETRY_XSR_INFO" 
		("UPDATE_CONTACT_ID" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_RETRY"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_RETRY"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "PMR_NUM" CHAR(7) , 
		  "BRANCH" CHAR(3) , 
		  "RETAIN_CNTRY_CODE" CHAR(3) , 
		  "ENTITLEMENT_KEY" VARCHAR(40) , 
		  "RETRY_CNT" SMALLINT , 
		  "STAGE" INTEGER , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "PARTNER_INIT" SMALLINT NOT NULL WITH DEFAULT 0 )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_RETRY"

ALTER TABLE "XSR     "."PMR_RETRY" 
	ADD CONSTRAINT "PMR_RETRY_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");



------------------------------------------------
-- DDL Statements for table "XSR     "."APPL_AUTH"
------------------------------------------------
 
 CREATE TABLE "XSR     "."APPL_AUTH"  (
		  "ADMIN_RIGHTS_ID" INTEGER NOT NULL , 
		  "ACTION_NAME" VARCHAR(64) NOT NULL , 
		  "USER_TYPE" VARCHAR(32) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."APPL_AUTH"

ALTER TABLE "XSR     "."APPL_AUTH" 
	ADD CONSTRAINT "APPL_AUTH_PK" PRIMARY KEY
		("ADMIN_RIGHTS_ID",
		 "ACTION_NAME",
		 "USER_TYPE");



------------------------------------------------
-- DDL Statements for table "XSR     "."CFG_PROPERTIES_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."CFG_PROPERTIES_LOG"  (
		  "PROP_LOG_ID" INTEGER NOT NULL , 
		  "PROPERTIES_ID" INTEGER NOT NULL , 
		  "KEY" VARCHAR(100) NOT NULL , 
		  "VALUE" VARCHAR(1024) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "ACTION_FLAG" CHAR(1) )   
		 IN "XSR1_LOG_01" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."CFG_PROPERTIES_LOG"

ALTER TABLE "XSR     "."CFG_PROPERTIES_LOG" 
	ADD CONSTRAINT "CFG_PROP_LOG_PK" PRIMARY KEY
		("PROP_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_DRAFT_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_DRAFT_LOG"  (
		  "PMR_DRAFT_LOG_ID" INTEGER NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "PMR_NUM" CHAR(7) , 
		  "BRANCH" CHAR(3) , 
		  "RETAIN_CNTRY_CODE" CHAR(3) , 
		  "STATE" INTEGER , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "ACTION_FLAG" CHAR(1) , 
		  "PARTNER_INIT" SMALLINT )   
		 IN "XSR1_LOG_01" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_DRAFT_LOG"

ALTER TABLE "XSR     "."PMR_DRAFT_LOG" 
	ADD CONSTRAINT "PMR_DRAFT_LOG_PK" PRIMARY KEY
		("PMR_DRAFT_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_DRAFT_RETAIN_INFO_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO_LOG"  (
		  "PMR_DRAFT_RETAIN_INFO_LOG_ID" INTEGER NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SW_HD" CHAR(1) , 
		  "RETAIN_NODE" VARCHAR(6) , 
		  "STATUS" CHAR(7) , 
		  "RETAIN_CALLER_TYPE" CHAR(1) , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "CUST_NAME_NLS" VARGRAPHIC(28) , 
		  "CONTACT_NAME_NLS" VARGRAPHIC(30) , 
		  "SUPPORT_LEVEL" CHAR(1) , 
		  "QUEUE" CHAR(6) , 
		  "CENTER" CHAR(3) , 
		  "NEXT_QUEUE" CHAR(6) , 
		  "NEXT_CENTER" CHAR(3) , 
		  "REQUEST_TYPE_ID" SMALLINT , 
		  "PROD_ID" VARCHAR(40) , 
		  "PROD_ID_VERSION" VARCHAR(8) , 
		  "COMP_ID" VARCHAR(15) , 
		  "COMP_ID_RELEASE" VARCHAR(3) , 
		  "RELEASE_LEVEL" VARCHAR(3) , 
		  "SEVERITY" CHAR(1) , 
		  "SYSTEM_DOWN" CHAR(1) , 
		  "APAR_NUM" CHAR(7) , 
		  "PRIORITY_PG" CHAR(3) , 
		  "CALL_CAT" CHAR(3) , 
		  "CUPRIMD" CHAR(1) , 
		  "FIRST_NAME" VARGRAPHIC(40) , 
		  "LAST_NAME" VARGRAPHIC(40) , 
		  "PHONE_NUM" VARGRAPHIC(40) , 
		  "PHONE_EXT" VARGRAPHIC(40) , 
		  "ALT_PHONE_NUM" VARGRAPHIC(40) , 
		  "ALT_PHONE_EXT" VARGRAPHIC(40) , 
		  "FAX_NUM" VARGRAPHIC(40) , 
		  "PAGER" VARGRAPHIC(30) , 
		  "EMAIL_ADR" VARGRAPHIC(127) , 
		  "ALT_EMAIL_ADDRESS" VARGRAPHIC(127) , 
		  "PMR_CREATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_TIME" VARCHAR(15) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "ACTION_FLAG" CHAR(1) )   
		 IN "XSR1_LOG_01" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_DRAFT_RETAIN_INFO_LOG"

ALTER TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO_LOG" 
	ADD CONSTRAINT "PMR_DR_RTN_LG_PK" PRIMARY KEY
		("PMR_DRAFT_RETAIN_INFO_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_DRAFT_XSR_INFO_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_DRAFT_XSR_INFO_LOG"  (
		  "PMR_DRAFT_XSR_INFO_LOG_ID" INTEGER NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SUPPORT_ID" BIGINT , 
		  "SUPPORT_OFFERING_ID" INTEGER , 
		  "MACHINE_ID" BIGINT , 
		  "PLATFORM_ID" INTEGER , 
		  "TITLE" VARGRAPHIC(512) , 
		  "DESCRIPTION" VARGRAPHIC(12288) , 
		  "CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_METHOD" VARGRAPHIC(10) , 
		  "ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "OPERSYS_ID" INTEGER , 
		  "CUST_TRACKING_NUM" VARGRAPHIC(20) , 
		  "OTHER_COMP_DSCR" VARGRAPHIC(255) , 
		  "INITIAL_SEVERITY" CHAR(1) , 
		  "SEVERITY_DESCRIPTION" VARGRAPHIC(512) , 
		  "LOCALE" VARCHAR(10) , 
		  "OPEN_COUNT" INTEGER , 
		  "PMR_CREATE_SRC_APPL" VARCHAR(40) , 
		  "CREATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "UPDATE_CONTACT_ID" VARGRAPHIC(40) , 
		  "ADD_ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "REMOVE_ALT_CONTACT_ID" VARGRAPHIC(40) , 
		  "PARTNER_INIT" INTEGER , 
		  "SUBMIT_TYPE" VARCHAR(15) , 
		  "CONTACT_ID" BIGINT , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "ACTION_FLAG" CHAR(1) )   
		 IN "XSR1_LOG_PG32K" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_DRAFT_XSR_INFO_LOG"

ALTER TABLE "XSR     "."PMR_DRAFT_XSR_INFO_LOG" 
	ADD CONSTRAINT "PMR_DFINF_LOG_PK" PRIMARY KEY
		("PMR_DRAFT_XSR_INFO_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."USER_AUTH_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."USER_AUTH_LOG"  (
		  "USER_AUTH_LOG_ID" INTEGER NOT NULL , 
		  "USER_ID" BIGINT NOT NULL , 
		  "RIGHT_MASK" VARCHAR(256) NOT NULL , 
		  "IS_LOCKED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "ACTION_FLAG" CHAR(1) )   
		 IN "XSR1_LOG_01" INDEX IN "XSR1_LOG_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."USER_AUTH_LOG"

ALTER TABLE "XSR     "."USER_AUTH_LOG" 
	ADD CONSTRAINT "USER_AUTH_LOG_PK" PRIMARY KEY
		("USER_AUTH_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_ADV_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_ADV_ROUTE"  (
		  "ROUTE_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER , 
		  "ROUTE_KEYWORD_LIST_ID" INTEGER , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "OS_ID" INTEGER , 
		  "PLATFORM_ID" INTEGER , 
		  "CONTRACT_TYPE_ID" INTEGER , 
		  "REQUEST_TYPE_ID" INTEGER , 
		  "PMR_SEVERITY" CHAR(1) , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_ADV_ROUTE"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_ADV_RTE_PK" PRIMARY KEY
		("ROUTE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_A_ADV_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_A_ADV_ROUTE"  (
		  "ROUTE_ID" INTEGER NOT NULL , 
		  "PREV_ROUTE_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER , 
		  "ROUTE_KEYWORD_LIST_ID" INTEGER , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "OS_ID" INTEGER , 
		  "PLATFORM_ID" INTEGER , 
		  "CONTRACT_TYPE_ID" INTEGER , 
		  "REQUEST_TYPE_ID" INTEGER , 
		  "PMR_SEVERITY" CHAR(1) , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_A_ADV_ROUTE"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_A_ADV_RTE_PK" PRIMARY KEY
		("ROUTE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_T_ADV_ROUTE"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_T_ADV_ROUTE"  (
		  "ROUTE_ID" INTEGER NOT NULL , 
		  "ROUTE_SET_ID" INTEGER NOT NULL , 
		  "ROUTE_TIME_SLOT_ID" INTEGER , 
		  "ROUTE_KEYWORD_LIST_ID" INTEGER , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "RETAIN_COUNTRY_CODE" CHAR(3) , 
		  "OS_ID" INTEGER , 
		  "PLATFORM_ID" INTEGER , 
		  "CONTRACT_TYPE_ID" INTEGER , 
		  "REQUEST_TYPE_ID" INTEGER , 
		  "PMR_SEVERITY" CHAR(1) , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."PMR_T_ADV_ROUTE"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_T_ADV_RTE_PK" PRIMARY KEY
		("ROUTE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_LOG"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_LOG"  (
		  "PMR_LOG_ID" INTEGER NOT NULL , 
		  "SRC_TRAN_ID" VARGRAPHIC(40) , 
		  "SRC_APPL" VARCHAR(40) , 
		  "SRC_NODE" VARCHAR(127) , 
		  "ROUTE_RULE" VARCHAR(40) , 
		  "PMR_NUM" CHAR(7) , 
		  "BRANCH" CHAR(3) , 
		  "RETAIN_CNTRY_CODE" CHAR(3) , 
		  "CONTACT_ID" BIGINT , 
		  "ESR_CONTACT_ID" VARGRAPHIC(128) , 
		  "RETAIN_STATUS" VARCHAR(10) , 
		  "WOPR_STATUS" VARCHAR(10) , 
		  "PMR_CREATE_DATE" VARCHAR(15) , 
		  "EMM_REQUEST" VARCHAR(32) , 
		  "QUEUE" VARGRAPHIC(6) , 
		  "CENTER" VARGRAPHIC(3) , 
		  "PRIORITY_PG" VARGRAPHIC(3) , 
		  "SEVERITY" VARCHAR(1) , 
		  "PRIORITY" VARCHAR(1) , 
		  "COMP_ID" VARCHAR(15) , 
		  "SUPPORT_LEVEL" VARCHAR(1) , 
		  "LOG_TEXT" VARCHAR(4096) , 
		  "LOCALE" VARCHAR(10) , 
		  "COMM_METHOD" VARCHAR(64) , 
		  "SDI_PORT" INTEGER , 
		  "SDI_IP" VARCHAR(20) , 
		  "ROUTE_REASON" VARGRAPHIC(256) , 
		  "NODE" VARCHAR(20) , 
		  "STAGE_TIME_1" INTEGER , 
		  "STAGE_TIME_2" INTEGER , 
		  "STAGE_TIME_3" INTEGER , 
		  "STAGE_TIME_4" INTEGER , 
		  "STAGE_TIME_5" INTEGER , 
		  "STAGE_TIME_6" INTEGER , 
		  "STAGE_TIME_7" INTEGER , 
		  "STAGE_TIME_8" INTEGER , 
		  "STAGE_TIME_9" INTEGER , 
		  "STAGE_TIME_10" INTEGER , 
		  "STAGE_TIME_11" INTEGER , 
		  "STAGE_TIME_12" INTEGER , 
		  "STAGE_TIME_13" INTEGER , 
		  "STAGE_TIME_14" INTEGER , 
		  "STAGE_TIME_15" INTEGER , 
		  "CREATE_USER" VARGRAPHIC(128) , 
		  "CREATE_DATETIME" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(128) , 
		  "UPDATE_DATETIME" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_LOG_PG16K" INDEX IN "XSR1_LOG_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_LOG" IS 'Logs activity on PMRs.';


-- DDL Statements for primary key on Table "XSR     "."PMR_LOG"

ALTER TABLE "XSR     "."PMR_LOG" 
	ADD CONSTRAINT "PMR_LOG_ID_PK" PRIMARY KEY
		("PMR_LOG_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_RETRY_RETAIN_INFO"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_RETRY_RETAIN_INFO"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SW_HD" CHAR(1) , 
		  "RETAIN_NODE" VARCHAR(6) , 
		  "STATUS" CHAR(7) , 
		  "RETAIN_CALLER_TYPE" CHAR(1) , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "CUST_NAME_NLS" VARGRAPHIC(28) , 
		  "CONTACT_NAME_NLS" VARGRAPHIC(30) , 
		  "SUPPORT_LEVEL" CHAR(1) , 
		  "QUEUE" CHAR(6) , 
		  "CENTER" CHAR(3) , 
		  "NEXT_QUEUE" CHAR(6) , 
		  "NEXT_CENTER" CHAR(3) , 
		  "REQUEST_TYPE_ID" SMALLINT , 
		  "PROD_ID" VARCHAR(40) , 
		  "PROD_ID_VERSION" VARCHAR(8) , 
		  "COMP_ID" VARCHAR(15) NOT NULL , 
		  "COMP_ID_RELEASE" VARCHAR(3) , 
		  "SEVERITY" CHAR(1) , 
		  "SYSTEM_DOWN" CHAR(1) , 
		  "CALL_CAT" CHAR(3) , 
		  "PMR_CREATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_TIME" VARCHAR(15) , 
		  "FIRST_NAME" VARGRAPHIC(40) , 
		  "LAST_NAME" VARGRAPHIC(40) , 
		  "PHONE_NUM" VARGRAPHIC(40) , 
		  "PHONE_EXT" VARGRAPHIC(40) , 
		  "ALT_PHONE_NUM" VARGRAPHIC(40) , 
		  "ALT_PHONE_EXT" VARGRAPHIC(40) , 
		  "FAX_NUM" VARGRAPHIC(40) , 
		  "PAGER" VARGRAPHIC(30) , 
		  "EMAIL_ADR" VARGRAPHIC(127) , 
		  "ALT_EMAIL_ADDRESS" VARGRAPHIC(127) , 
		  "SUBMIT_TYPE" VARCHAR(24) , 
		  "RESP_TYPE" VARCHAR(256) , 
		  "PRIORITY" CHAR(1) , 
		  "SIGNATURE_NAME" VARCHAR(222) , 
		  "CREATE_USER" VARGRAPHIC(128) , 
		  "CREATE_DATETIME" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(128) , 
		  "UPDATE_DATETIME" TIMESTAMP WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_RETRY_RETAIN_INFO" IS 'Contains RETAIN specific information associated to a PMR in retry state.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."ALT_PHONE_NUM" IS 'CONTACT''S PHONE NUMBER';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."CALL_CAT" IS 'CALL CATEGORY. USED ON CREATE (PMCE)  AND UPATE (PMCE).';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."CENTER" IS 'CENTER THAT IS PAIRED WITH QUEUE';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."COMP_ID" IS 'COMPONENT ID THIS PMR IS ABOUT';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."CUST_NAME_NLS" IS 'THE COMPANY NAME OF THE CUSTOMER';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."PHONE_NUM" IS 'COMPANY PHONE NUMBER.  THIS ONE IS NOT USED TO CALL THE PERSON BACK';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."PMR_UPDATE_DATE" IS 'Last date the PMR was updated in RETAIN.  This date could vary from the updt_date stored in xSR because xSR database only tracks activity within the xSR application.  The record could have been updated in RETAIN. ';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."PROD_ID" IS 'FK TO CAM IDENTIFYING THE PRODUCT THE PMR IS OPENED UNDER.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."QUEUE" IS 'QUEUE THE PMR IS CURRENTLY ON - OR THE QUEUE THE PMR WAS ON LAST OF THERE ARE NO CALLS ON THE PMR.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."RETAIN_NODE" IS 'THE NODE THAT IS THE SOURCE FOR THE PMR RECORD.  RS4 OR BDC.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."SEVERITY" IS 'PMR SEVERITY.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."STATUS" IS 'RETAIN FIELD: The current status - open, closed, etc.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."SUPPORT_LEVEL" IS 'THIS IS ALWAYS A ''1';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."SW_HD" IS 'THE TYPE OF PMR - SOFTWARE OR HARDWARE FOR NOW, ALWAYS DEFAULT TO S FOR SOFTWARE.';

COMMENT ON COLUMN "XSR     "."PMR_RETRY_RETAIN_INFO"."SYSTEM_DOWN" IS 'INDICATES THAT A SYSTEM IS DOWN FOR A CUSTOMER.';


-- DDL Statements for primary key on Table "XSR     "."PMR_RETRY_RETAIN_INFO"

ALTER TABLE "XSR     "."PMR_RETRY_RETAIN_INFO" 
	ADD CONSTRAINT "PMR_RETRY_RI_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_RETRY_RETAIN_INFO"

CREATE INDEX "XSR     "."PMR_RETRY_RI_IDX1" ON "XSR     "."PMR_RETRY_RETAIN_INFO" 
		("PMR_CREATE_DATE" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_RETRY_RETAIN_INFO"

CREATE INDEX "XSR     "."PMR_RETRY_RI_IDX2" ON "XSR     "."PMR_RETRY_RETAIN_INFO" 
		("STATUS" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_RETAIN_INFO"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_RETAIN_INFO"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "SW_HD" CHAR(1) , 
		  "RETAIN_NODE" VARCHAR(6) , 
		  "STATUS" CHAR(7) , 
		  "RETAIN_CALLER_TYPE" CHAR(1) , 
		  "IBM_CUST_NUM" VARCHAR(8) , 
		  "CUST_NAME_NLS" VARGRAPHIC(28) , 
		  "CONTACT_NAME_NLS" VARGRAPHIC(30) , 
		  "PHONE_NUM" VARGRAPHIC(40) , 
		  "PHONE_EXT" VARGRAPHIC(40) , 
		  "ALT_PHONE_NUM" VARGRAPHIC(40) , 
		  "ALT_PHONE_EXT" VARGRAPHIC(40) , 
		  "SUPPORT_LEVEL" CHAR(1) , 
		  "QUEUE" CHAR(6) , 
		  "CENTER" CHAR(3) , 
		  "NEXT_QUEUE" CHAR(6) , 
		  "NEXT_CENTER" CHAR(3) , 
		  "REQUEST_TYPE_ID" SMALLINT , 
		  "PROD_ID" VARCHAR(40) , 
		  "PROD_ID_VERSION" VARCHAR(8) , 
		  "COMP_ID" VARCHAR(15) NOT NULL , 
		  "COMP_ID_RELEASE" VARCHAR(3) , 
		  "RELEASE_LEVEL" VARCHAR(3) , 
		  "SEVERITY" CHAR(1) , 
		  "SYSTEM_DOWN" CHAR(1) , 
		  "APAR_NUM" CHAR(7) , 
		  "PRIORITY_PG" CHAR(3) , 
		  "CALL_CAT" CHAR(3) , 
		  "CUPRIMD" CHAR(1) , 
		  "PMR_CREATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_DATE" VARCHAR(15) , 
		  "PMR_UPDATE_TIME" VARCHAR(15) , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_RETAIN_INFO" IS 'Contains RETAIN specific information associated to a PMR.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."ALT_PHONE_NUM" IS 'CONTACT''S PHONE NUMBER';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."APAR_NUM" IS 'APAR ASSOCIATED WITH THE PMR (IF IT EXISTS)';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."CALL_CAT" IS 'CALL CATEGORY. USED ON CREATE (PMCE)  AND UPATE (PMCE).';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."CENTER" IS 'CENTER THAT IS PAIRED WITH QUEUE';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."COMP_ID" IS 'COMPONENT ID THIS PMR IS ABOUT';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."CUPRIMD" IS 'METRICS FIELD HAVING TO DO WITH SOLUTION GIVEN.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."CUST_NAME_NLS" IS 'THE COMPANY NAME OF THE CUSTOMER';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."PHONE_NUM" IS 'COMPANY PHONE NUMBER.  THIS ONE IS NOT USED TO CALL THE PERSON BACK';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."PMR_CREATE_DATE" IS 'Date PMR was created.  If the service requrest was created in xSR then this date and the create_date should be the same.  But, for those service request that were created by phone os some other means then this date will be the actual';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."PMR_UPDATE_DATE" IS 'LAST DATE THE PMR WAS UPDATED IN RETAIN.  THIS DATE COULD VARY FROM THE UPDATE_DATETIME STORED IN XSR BECAUSE XSR DATABASE ONLY TRACKS ACTIVITY WITHIN THE XSR APPLICATION.  THE RECORD COULD HAVE BEEN UPDATED IN RETAIN. ';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."PRIORITY_PG" IS 'PRI-PAGE.  PRIORITY PAGE IS BASCIALLY THE NUMBER OF THE CALL ON A QUEUE.  IF A CALL IS THE SECOND PRIORITY 3 CALL ON A QUEUE THE PRI-PAGE IS 302.  THIS IS LINKED WITH THE QUEUE, CENTER FIELDS.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."PROD_ID" IS 'FK TO CAM IDENTIFYING THE PRODUCT THE PMR IS OPENED UNDER.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."QUEUE" IS 'QUEUE THE PMR IS CURRENTLY ON - OR THE QUEUE THE PMR WAS ON LAST OF THERE ARE NO CALLS ON THE PMR.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."RELEASE_LEVEL" IS 'RELEASE_LEVELEASE LEVEL.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."RETAIN_NODE" IS 'THE NODE THAT IS THE SOURCE FOR THE PMR RECORD.  RS4 OR BDC.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."SEVERITY" IS 'PMR SEVERITY.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."STATUS" IS 'RETAIN FIELD: THE CURRENT STATUS - OPEN, CLOSED, ETC.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."SUPPORT_LEVEL" IS 'THIS IS ALWAYS A ''1';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."SW_HD" IS 'THE TYPE OF PMR - SOFTWARE OR HARDWARE FOR NOW, ALWAYS DEFAULT TO S FOR SOFTWARE.';

COMMENT ON COLUMN "XSR     "."PMR_RETAIN_INFO"."SYSTEM_DOWN" IS 'INDICATES THAT A SYSTEM IS DOWN FOR A CUSTOMER.';


-- DDL Statements for primary key on Table "XSR     "."PMR_RETAIN_INFO"

ALTER TABLE "XSR     "."PMR_RETAIN_INFO" 
	ADD CONSTRAINT "PMR_HEADER_RI_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_RETAIN_INFO"

CREATE INDEX "XSR     "."PMR_HEADER_RI_IDX1" ON "XSR     "."PMR_RETAIN_INFO" 
		("PMR_CREATE_DATE" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_RETAIN_INFO"

CREATE INDEX "XSR     "."PMR_HEADER_RI_IDX2" ON "XSR     "."PMR_RETAIN_INFO" 
		("STATUS" ASC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."PMR_HEADER"
------------------------------------------------
 
 CREATE TABLE "XSR     "."PMR_HEADER"  (
		  "SRC_TRAN_ID" VARGRAPHIC(40) NOT NULL , 
		  "SRC_APPL" VARCHAR(40) NOT NULL , 
		  "SRC_NODE" VARCHAR(127) NOT NULL , 
		  "PMR_NUM" CHAR(7) , 
		  "BRANCH" CHAR(3) , 
		  "RETAIN_CNTRY_CODE" CHAR(3) , 
		  "STATE" SMALLINT , 
		  "ENTITLED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "PARTNER_INIT" SMALLINT NOT NULL WITH DEFAULT 0 )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 
COMMENT ON TABLE "XSR     "."PMR_HEADER" IS 'Primary PMR table associated with active PMRs.';

COMMENT ON COLUMN "XSR     "."PMR_HEADER"."BRANCH" IS 'RETAIN BRANCH';

COMMENT ON COLUMN "XSR     "."PMR_HEADER"."PMR_NUM" IS 'RETAIN PROBLEM NUMBER';

COMMENT ON COLUMN "XSR     "."PMR_HEADER"."RETAIN_CNTRY_CODE" IS 'RETAIN COUNTRY CODE';


-- DDL Statements for primary key on Table "XSR     "."PMR_HEADER"

ALTER TABLE "XSR     "."PMR_HEADER" 
	ADD CONSTRAINT "PMR_HEADER_PK" PRIMARY KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE");


-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX1" ON "XSR     "."PMR_HEADER" 
		("UPDATE_USER" DESC,
		 "PMR_NUM" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX2" ON "XSR     "."PMR_HEADER" 
		("RETAIN_CNTRY_CODE" ASC,
		 "PMR_NUM" ASC,
		 "BRANCH" ASC,
		 "SRC_NODE" ASC,
		 "SRC_APPL" ASC,
		 "SRC_TRAN_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX3" ON "XSR     "."PMR_HEADER" 
		("PMR_NUM" ASC,
		 "RETAIN_CNTRY_CODE" ASC,
		 "BRANCH" ASC,
		 "SRC_NODE" ASC,
		 "SRC_APPL" ASC,
		 "SRC_TRAN_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX4" ON "XSR     "."PMR_HEADER" 
		("SRC_APPL" ASC,
		 "SRC_NODE" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX5" ON "XSR     "."PMR_HEADER" 
		("SRC_APPL" ASC,
		 "SRC_NODE" DESC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX6" ON "XSR     "."PMR_HEADER" 
		("SRC_APPL" ASC,
		 "SRC_TRAN_ID" ASC) PCTFREE 10 ;

-- DDL Statements for indexes on Table "XSR     "."PMR_HEADER"

CREATE INDEX "XSR     "."PMR_HEADER_IDX7" ON "XSR     "."PMR_HEADER" 
		("PMR_NUM" ASC,
		 "BRANCH" ASC,
		 "RETAIN_CNTRY_CODE" ASC,
		 "CREATE_DATETIME" DESC) PCTFREE 10 ;


------------------------------------------------
-- DDL Statements for table "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS"
------------------------------------------------
 
 CREATE TABLE "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS"  (
		  "LIVE_ASSISTANCE_EXCL_ID" INTEGER NOT NULL , 
		  "LIVE_ASSISTANCE_ID" INTEGER NOT NULL , 
		  "EXCLUDE_DATE" DATE NOT NULL , 
		  "REPEAT_YEARLY" SMALLINT NOT NULL , 
		  "OPEN_TIME" TIMESTAMP , 
		  "CLOSE_TIME" TIMESTAMP , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS" 
	ADD CONSTRAINT "LIVE_ASS_EXCL_PK" PRIMARY KEY
		("LIVE_ASSISTANCE_EXCL_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."LIVE_ASSISTANCE_LOOKUP"
------------------------------------------------
 
 CREATE TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP"  (
		  "LIVE_ASSISTANCE_ID" INTEGER NOT NULL , 
		  "QUEUE" VARGRAPHIC(6) NOT NULL , 
		  "CENTER" VARGRAPHIC(3) NOT NULL , 
		  "COMP_ID" VARCHAR(15) , 
		  "OPEN_TIME" TIMESTAMP NOT NULL , 
		  "CLOSE_TIME" TIMESTAMP NOT NULL , 
		  "MON" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "TUE" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "WED" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "THU" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "FRI" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SAT" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SUN" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CALL_ME_NEW" INTEGER NOT NULL WITH DEFAULT 0 , 
		  "CALL_ME_EXISTING" INTEGER NOT NULL WITH DEFAULT 0 , 
		  "CHAT_NEW" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "CHAT_EXISTING" SMALLINT NOT NULL WITH DEFAULT 0 , 
		  "SOURCE" VARCHAR(10) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "LIVE_ASS_LKP_PK" PRIMARY KEY
		("LIVE_ASSISTANCE_ID");



------------------------------------------------
-- DDL Statements for table "XSR     "."LIVE_ASSISTANCE_HISTORY"
------------------------------------------------
 
 CREATE TABLE "XSR     "."LIVE_ASSISTANCE_HISTORY"  (
		  "LIVE_ASSISTANCE_HIST_ID" INTEGER NOT NULL , 
		  "USER_ID" VARCHAR(40) NOT NULL , 
		  "CHAT_OFFERED" SMALLINT NOT NULL , 
		  "CALL_ME_OFFERED" SMALLINT NOT NULL , 
		  "CHAT_USED_DATETIME" TIMESTAMP NOT NULL , 
		  "CALL_ME_USED_DATETIME" TIMESTAMP NOT NULL , 
		  "COMP_ID" VARCHAR(15) NOT NULL , 
		  "SR_NUMBER" VARCHAR(15) NOT NULL , 
		  "PMR_LOG_ID" INTEGER NOT NULL , 
		  "SOURCE" VARCHAR(10) NOT NULL , 
		  "CREATE_USER" VARGRAPHIC(127) , 
		  "CREATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , 
		  "UPDATE_USER" VARGRAPHIC(127) , 
		  "UPDATE_DATETIME" TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP )   
		 IN "XSR1_DATA_01" INDEX IN "XSR1_INDX_01" ; 

-- DDL Statements for primary key on Table "XSR     "."LIVE_ASSISTANCE_HISTORY"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_HISTORY" 
	ADD CONSTRAINT "LIVE_ASS_HIST_PK" PRIMARY KEY
		("LIVE_ASSISTANCE_HIST_ID");








-- DDL Statements for check constraints on Table "XSR     "."COMP_GROUP"

ALTER TABLE "XSR     "."COMP_GROUP" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(STATUS in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."COMP_GROUP_COMP_XREF"

ALTER TABLE "XSR     "."COMP_GROUP_COMP_XREF" 
	ADD CONSTRAINT "CMP_GRP_CMP_FK01" FOREIGN KEY
		("COMP_GROUP_ID")
	REFERENCES "XSR     "."COMP_GROUP"
		("COMP_GROUP_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ROUTE_LOG"

ALTER TABLE "XSR     "."PMR_ROUTE_LOG" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(CREATE_FLAG in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."AUDIT_LOG"

ALTER TABLE "XSR     "."AUDIT_LOG" 
	ADD CONSTRAINT "AUDIT_LOG_FK1" FOREIGN KEY
		("APP_ID")
	REFERENCES "XSR     "."APP_TYPE"
		("APP_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."AUDIT_LOG" 
	ADD CONSTRAINT "AUDIT_LOG_FK2" FOREIGN KEY
		("SRC_APP_ID")
	REFERENCES "XSR     "."APP_TYPE"
		("APP_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."AUDIT_LOG" 
	ADD CONSTRAINT "AUDIT_LOG_FK3" FOREIGN KEY
		("ACTION_ID")
	REFERENCES "XSR     "."AUDIT_ACTION_TYPE"
		("ACTION_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."AUDIT_LOG" 
	ADD CONSTRAINT "AUDIT_LOG_FK4" FOREIGN KEY
		("OBJ_TYPE_ID")
	REFERENCES "XSR     "."AUDIT_OBJ_TYPE"
		("OBJ_TYPE_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PAR_S_FK02" FOREIGN KEY
		("COMP_GROUP_ID")
	REFERENCES "XSR     "."COMP_GROUP"
		("COMP_GROUP_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PAR_TIME_SLOT_FK1" FOREIGN KEY
		("TIME_ZONE_ID")
	REFERENCES "XSR     "."TIME_ZONE"
		("TIME_ZONE_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PAR_TIME_SLOT_FK2" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_1" CHECK 
		(MON in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_2" CHECK 
		(TUE in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_3" CHECK 
		(WED in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_4" CHECK 
		(THU in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_5" CHECK 
		(FRI in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_6" CHECK 
		(SAT in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_7" CHECK 
		(SUN in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PMR_AR_ED_FK01" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(REPEAT_YEARLY in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ADV_ROUTE_KEYWORD"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_KEYWORD" 
	ADD CONSTRAINT "PAR_KW_FK01" FOREIGN KEY
		("ROUTE_KEYWORD_LIST_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST"
		("ROUTE_KEYWORD_LIST_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST" 
	ADD CONSTRAINT "PMR_AR_KL_FK01" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_T_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PTAR_S_FK02" FOREIGN KEY
		("COMP_GROUP_ID")
	REFERENCES "XSR     "."COMP_GROUP"
		("COMP_GROUP_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PTAR_TIME_SLOT_FK1" FOREIGN KEY
		("TIME_ZONE_ID")
	REFERENCES "XSR     "."TIME_ZONE"
		("TIME_ZONE_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PTAR_TIME_SLOT_FK2" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_1" CHECK 
		(MON in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_2" CHECK 
		(TUE in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_3" CHECK 
		(WED in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_4" CHECK 
		(THU in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_5" CHECK 
		(FRI in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_6" CHECK 
		(SAT in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_7" CHECK 
		(SUN in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST" 
	ADD CONSTRAINT "PMR_T_AR_KL_FK01" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_T_ADV_ROUTE_KEYWORD"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_KEYWORD" 
	ADD CONSTRAINT "PTAR_KW_FK02" FOREIGN KEY
		("ROUTE_KEYWORD_LIST_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST"
		("ROUTE_KEYWORD_LIST_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PMR_T_AR_ED_FK01" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(REPEAT_YEARLY in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_A_ADV_ROUTE_SET"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_SET" 
	ADD CONSTRAINT "PAAR_S_FK02" FOREIGN KEY
		("COMP_GROUP_ID")
	REFERENCES "XSR     "."COMP_GROUP"
		("COMP_GROUP_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST" 
	ADD CONSTRAINT "PMR_T_AR_KL_FK01" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_A_ADV_ROUTE_KEYWORD"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_KEYWORD" 
	ADD CONSTRAINT "PAAR_KW_LIST_FK02" FOREIGN KEY
		("ROUTE_KEYWORD_LIST_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST"
		("ROUTE_KEYWORD_LIST_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PAAR_TIME_SLOT_FK1" FOREIGN KEY
		("TIME_ZONE_ID")
	REFERENCES "XSR     "."TIME_ZONE"
		("TIME_ZONE_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PTAR_TIME_SLOT_FK2" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_1" CHECK 
		(MON in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_2" CHECK 
		(TUE in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_3" CHECK 
		(WED in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_4" CHECK 
		(THU in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_5" CHECK 
		(FRI in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_6" CHECK 
		(SAT in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_7" CHECK 
		(SUN in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PMR_A_AR_ED_FK01" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(REPEAT_YEARLY in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_PREM_ROUTE"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE" 
	ADD CONSTRAINT "PMR_PREM_RTE_FK01" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_PREM_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_PREM_ROUTE" 
	ADD CONSTRAINT "PMR_PREM_RTE_FK02" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PPR_TIME_SLOT_FK1" FOREIGN KEY
		("TIME_ZONE_ID")
	REFERENCES "XSR     "."TIME_ZONE"
		("TIME_ZONE_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "PPR_TIME_SLOT_FK2" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_PREM_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_1" CHECK 
		(MON in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_2" CHECK 
		(TUE in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_3" CHECK 
		(WED in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_4" CHECK 
		(THU in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_5" CHECK 
		(FRI in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_6" CHECK 
		(SAT in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_TIME_SLOT" 
	ADD CONSTRAINT "BOOL_CHECK_7" CHECK 
		(SUN in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "PMR_PR_ED_FK1" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_PREM_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS"

ALTER TABLE "XSR     "."PMR_PREM_ROUTE_EXCL_DAYS" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(REPEAT_YEARLY in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."USER_PROD_FAVORITES"

ALTER TABLE "XSR     "."USER_PROD_FAVORITES" 
	ADD CONSTRAINT "USR_PROD_FAV_FK1" FOREIGN KEY
		("USER_ID")
	REFERENCES "XSR     "."USER_PROFILE"
		("USER_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."USER_PMR_RETRY_XREF"

ALTER TABLE "XSR     "."USER_PMR_RETRY_XREF" 
	ADD CONSTRAINT "USR_PMR_RTY_X_FK2" FOREIGN KEY
		("USER_ID")
	REFERENCES "XSR     "."USER_PROFILE"
		("USER_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."USER_PMR_DRAFT_XREF"

ALTER TABLE "XSR     "."USER_PMR_DRAFT_XREF" 
	ADD CONSTRAINT "USR_PMR_DRFT_X_FK3" FOREIGN KEY
		("USER_ID")
	REFERENCES "XSR     "."USER_PROFILE"
		("USER_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."USER_PMR_DRAFT_XREF" 
	ADD CONSTRAINT "USR_PMR_DRFT_X_FK4" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_DRAFT"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_SIG_LINES"

ALTER TABLE "XSR     "."PMR_SIG_LINES" 
	ADD CONSTRAINT "PMR_SIG_LN_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_HEADER"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."USER_PMR_XREF"

ALTER TABLE "XSR     "."USER_PMR_XREF" 
	ADD CONSTRAINT "USR_PMR_XREF_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_HEADER"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."USER_PMR_XREF" 
	ADD CONSTRAINT "USR_PMR_XREF_FK2" FOREIGN KEY
		("USER_ID")
	REFERENCES "XSR     "."USER_PROFILE"
		("USER_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."ADMIN_AUTH"

ALTER TABLE "XSR     "."ADMIN_AUTH" 
	ADD CONSTRAINT "ADMIN_AUTH_FK1" FOREIGN KEY
		("ADMIN_RIGHTS_ID")
	REFERENCES "XSR     "."ADMIN_RIGHTS"
		("ADMIN_RIGHTS_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."ADMIN_RIGHTS"

ALTER TABLE "XSR     "."ADMIN_RIGHTS" 
	ADD CONSTRAINT "ADMIN_RIGHTS_FK1" FOREIGN KEY
		("APP_ID")
	REFERENCES "XSR     "."APP_TYPE"
		("APP_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_COUNTRY_ORG_CONFIG"

ALTER TABLE "XSR     "."PMR_COUNTRY_ORG_CONFIG" 
	ADD CONSTRAINT "PMR_CTRYORGCFG_FK1" FOREIGN KEY
		("ISO_CNTRY_CODE_2")
	REFERENCES "XSR     "."PMR_COUNTRY_CONFIG"
		("ISO_CNTRY_CODE_2")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."BP_SITE_PMR_XREF"

ALTER TABLE "XSR     "."BP_SITE_PMR_XREF" 
	ADD CONSTRAINT "BP_PMR_XREF_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_HEADER"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."BP_SITE_PMR_DRAFT_XREF"

ALTER TABLE "XSR     "."BP_SITE_PMR_DRAFT_XREF" 
	ADD CONSTRAINT "BP_PMR_DRAFT_X_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_DRAFT"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_DRAFT_RETAIN_INFO"

ALTER TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO" 
	ADD CONSTRAINT "PMR_DRAFT_RI_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_DRAFT"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_DRAFT_RETAIN_INFO" 
	ADD CONSTRAINT "REQST_TYPE_FK2" FOREIGN KEY
		("REQUEST_TYPE_ID")
	REFERENCES "XSR     "."AVL_REQUEST_TYPE"
		("AVL_REQUEST_TYPE_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ATTACHMENT"

ALTER TABLE "XSR     "."PMR_ATTACHMENT" 
	ADD CONSTRAINT "PMR_ATTACHMNT_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_HEADER"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	NOT ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_ATTACHMENT" 
	ADD CONSTRAINT "PMR_ATTACHMNT_FK2" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_DRAFT"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	NOT ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_XSR_INFO"

ALTER TABLE "XSR     "."PMR_XSR_INFO" 
	ADD CONSTRAINT "PMR_HEADER_XI_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_HEADER"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_DRAFT_XSR_INFO"

ALTER TABLE "XSR     "."PMR_DRAFT_XSR_INFO" 
	ADD CONSTRAINT "PMR_DRAFT_XI_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_DRAFT"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_RETRY_XSR_INFO"

ALTER TABLE "XSR     "."PMR_RETRY_XSR_INFO" 
	ADD CONSTRAINT "PMR_RETRY_XI_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_RETRY"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE CASCADE
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."APPL_AUTH"

ALTER TABLE "XSR     "."APPL_AUTH" 
	ADD CONSTRAINT "APPL_AUTH_FK1" FOREIGN KEY
		("ADMIN_RIGHTS_ID")
	REFERENCES "XSR     "."ADMIN_RIGHTS"
		("ADMIN_RIGHTS_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_ADV_ROUTE"

ALTER TABLE "XSR     "."PMR_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_ADV_RTE_FK01" FOREIGN KEY
		("OS_ID")
	REFERENCES "XSR     "."AVL_OPERATING_SYSTEM"
		("OS_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_ADV_RTE_FK02" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_ADV_RTE_FK03" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_ADV_RTE_FK04" FOREIGN KEY
		("ROUTE_KEYWORD_LIST_ID")
	REFERENCES "XSR     "."PMR_ADV_ROUTE_KEYWORD_LIST"
		("ROUTE_KEYWORD_LIST_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_A_ADV_ROUTE"

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_A_ADV_RTE_FK01" FOREIGN KEY
		("OS_ID")
	REFERENCES "XSR     "."AVL_OPERATING_SYSTEM"
		("OS_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_A_ADV_RTE_FK03" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_A_ADV_RTE_FK04" FOREIGN KEY
		("ROUTE_KEYWORD_LIST_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_KEYWORD_LIST"
		("ROUTE_KEYWORD_LIST_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_A_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_A_ADV_RTE_FK05" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_A_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_T_ADV_ROUTE"

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_T_ADV_RTE_FK01" FOREIGN KEY
		("OS_ID")
	REFERENCES "XSR     "."AVL_OPERATING_SYSTEM"
		("OS_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_T_ADV_RTE_FK03" FOREIGN KEY
		("ROUTE_SET_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_SET"
		("ROUTE_SET_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_T_ADV_RTE_FK04" FOREIGN KEY
		("ROUTE_TIME_SLOT_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_TIME_SLOT"
		("ROUTE_TIME_SLOT_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_T_ADV_ROUTE" 
	ADD CONSTRAINT "PMR_T_ADV_RTE_FK05" FOREIGN KEY
		("ROUTE_KEYWORD_LIST_ID")
	REFERENCES "XSR     "."PMR_T_ADV_ROUTE_KEYWORD_LIST"
		("ROUTE_KEYWORD_LIST_ID")
	ON DELETE NO ACTION
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_RETRY_RETAIN_INFO"

ALTER TABLE "XSR     "."PMR_RETRY_RETAIN_INFO" 
	ADD CONSTRAINT "REQST_TYPE_FK3" FOREIGN KEY
		("REQUEST_TYPE_ID")
	REFERENCES "XSR     "."AVL_REQUEST_TYPE"
		("AVL_REQUEST_TYPE_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."PMR_RETAIN_INFO"

ALTER TABLE "XSR     "."PMR_RETAIN_INFO" 
	ADD CONSTRAINT "PMR_HEADER_RI_FK1" FOREIGN KEY
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	REFERENCES "XSR     "."PMR_HEADER"
		("SRC_TRAN_ID",
		 "SRC_APPL",
		 "SRC_NODE")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

ALTER TABLE "XSR     "."PMR_RETAIN_INFO" 
	ADD CONSTRAINT "REQST_TYPE_FK1" FOREIGN KEY
		("REQUEST_TYPE_ID")
	REFERENCES "XSR     "."AVL_REQUEST_TYPE"
		("AVL_REQUEST_TYPE_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS" 
	ADD CONSTRAINT "LIVE_ASS_FK1" FOREIGN KEY
		("LIVE_ASSISTANCE_ID")
	REFERENCES "XSR     "."LIVE_ASSISTANCE_LOOKUP"
		("LIVE_ASSISTANCE_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_EXCLUDE_DAYS" 
	ADD CONSTRAINT "BOOL_CHECK" CHECK 
		(REPEAT_YEARLY in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_1" CHECK 
		(MON in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_2" CHECK 
		(TUE in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_3" CHECK 
		(WED in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_4" CHECK 
		(THU in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_5" CHECK 
		(FRI in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_6" CHECK 
		(SAT in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for check constraints on Table "XSR     "."LIVE_ASSISTANCE_LOOKUP"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_LOOKUP" 
	ADD CONSTRAINT "BOOL_CHECK_7" CHECK 
		(SUN in (0, 1))
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-- DDL Statements for foreign keys on Table "XSR     "."LIVE_ASSISTANCE_HISTORY"

ALTER TABLE "XSR     "."LIVE_ASSISTANCE_HISTORY" 
	ADD CONSTRAINT "LIVE_ASS_HIST_FK1" FOREIGN KEY
		("PMR_LOG_ID")
	REFERENCES "XSR     "."PMR_LOG"
		("PMR_LOG_ID")
	ON DELETE RESTRICT
	ON UPDATE NO ACTION
	ENFORCED
	ENABLE QUERY OPTIMIZATION;

-------------------------------
-- DDL Statements for Triggers
-------------------------------

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TDA_PMR_DFTRTN_LG
  AFTER DELETE
  ON XSR.PMR_DRAFT_RETAIN_INFO
  REFERENCING 
              OLD AS O
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_RETAIN_INFO_LOG
(
  PMR_DRAFT_RETAIN_INFO_LOG_ID,
	SRC_TRAN_ID,
  SRC_APPL,
  SRC_NODE,
  SW_HD,
  RETAIN_NODE,
  STATUS,
  RETAIN_CALLER_TYPE,
  IBM_CUST_NUM,
  CUST_NAME_NLS,
  CONTACT_NAME_NLS,
  SUPPORT_LEVEL,
  QUEUE,
  CENTER,
  NEXT_QUEUE,
  NEXT_CENTER,
  REQUEST_TYPE_ID,
  PROD_ID,
  PROD_ID_VERSION,
  COMP_ID,
  COMP_ID_RELEASE,
  RELEASE_LEVEL,
  SEVERITY,
  SYSTEM_DOWN,
  APAR_NUM,
  PRIORITY_PG,
  CALL_CAT,
  CUPRIMD,
  FIRST_NAME,
  LAST_NAME,
  PHONE_NUM,
  PHONE_EXT,
  ALT_PHONE_NUM,
  ALT_PHONE_EXT,
  FAX_NUM,
  PAGER,
  EMAIL_ADR,
  ALT_EMAIL_ADDRESS,
  PMR_CREATE_DATE,
  PMR_UPDATE_DATE,
  PMR_UPDATE_TIME,
  CREATE_USER,
  CREATE_DATETIME,
  UPDATE_USER,
  UPDATE_DATETIME,
  ACTION_FLAG
)
VALUES
(
  NEXTVAL FOR XSR.SEQ_PMR_DRAFT_RETAIN_INFO_LOG_ID,
	O.SRC_TRAN_ID,
  O.SRC_APPL,
  O.SRC_NODE,
  O.SW_HD,
  O.RETAIN_NODE,
  O.STATUS,
  O.RETAIN_CALLER_TYPE,
  O.IBM_CUST_NUM,
  O.CUST_NAME_NLS,
  O.CONTACT_NAME_NLS,
  O.SUPPORT_LEVEL,
  O.QUEUE,
  O.CENTER,
  O.NEXT_QUEUE,
  O.NEXT_CENTER,
  O.REQUEST_TYPE_ID,
  O.PROD_ID,
  O.PROD_ID_VERSION,
  O.COMP_ID,
  O.COMP_ID_RELEASE,
  O.RELEASE_LEVEL,
  O.SEVERITY,
  O.SYSTEM_DOWN,
  O.APAR_NUM,
  O.PRIORITY_PG,
  O.CALL_CAT,
  O.CUPRIMD,
  O.FIRST_NAME,
  O.LAST_NAME,
  O.PHONE_NUM,
  O.PHONE_EXT,
  O.ALT_PHONE_NUM,
  O.ALT_PHONE_EXT,
  O.FAX_NUM,
  O.PAGER,
  O.EMAIL_ADR,
  O.ALT_EMAIL_ADDRESS,
  O.PMR_CREATE_DATE,
  O.PMR_UPDATE_DATE,
  O.PMR_UPDATE_TIME,
O.CREATE_USER,
O.CREATE_DATETIME,
O.UPDATE_USER,
CURRENT TIMESTAMP,
'D'
);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TDA_PMR_DFTXSR_LG
  AFTER DELETE
  ON XSR.PMR_DRAFT_XSR_INFO
  REFERENCING 
              OLD AS O
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_XSR_INFO_LOG
(
PMR_DRAFT_XSR_INFO_LOG_ID,
SRC_TRAN_ID,
SRC_APPL,
SRC_NODE,
SUPPORT_ID,
        SUPPORT_OFFERING_ID ,
        MACHINE_ID ,
        PLATFORM_ID ,
TITLE,
DESCRIPTION,
CONTACT_METHOD,
ALT_CONTACT_METHOD,
ALT_CONTACT_ID,
OPERSYS_ID,
CUST_TRACKING_NUM,
OTHER_COMP_DSCR,
INITIAL_SEVERITY,
SEVERITY_DESCRIPTION,
LOCALE,
OPEN_COUNT,
PMR_CREATE_SRC_APPL,
CREATE_CONTACT_ID,
UPDATE_CONTACT_ID,
ADD_ALT_CONTACT_ID,
REMOVE_ALT_CONTACT_ID,
PARTNER_INIT,
SUBMIT_TYPE,
CONTACT_ID,
CREATE_USER,
CREATE_DATETIME,
UPDATE_USER,
UPDATE_DATETIME,
ACTION_FLAG
)
VALUES
(
NEXTVAL FOR XSR.SEQ_PMR_DRAFT_XSR_INFO_LOG_ID,
O.SRC_TRAN_ID,
O.SRC_APPL,
O.SRC_NODE,
O.SUPPORT_ID,
        O.SUPPORT_OFFERING_ID ,
        O.MACHINE_ID ,
        O.PLATFORM_ID ,
O.TITLE,
O.DESCRIPTION,
O.CONTACT_METHOD,
O.ALT_CONTACT_METHOD,
O.ALT_CONTACT_ID,
O.OPERSYS_ID,
O.CUST_TRACKING_NUM,
O.OTHER_COMP_DSCR,
O.INITIAL_SEVERITY,
O.SEVERITY_DESCRIPTION,
O.LOCALE,
O.OPEN_COUNT,
O.PMR_CREATE_SRC_APPL,
O.CREATE_CONTACT_ID,
O.UPDATE_CONTACT_ID,
O.ADD_ALT_CONTACT_ID,
O.REMOVE_ALT_CONTACT_ID,
O.PARTNER_INIT,
O.SUBMIT_TYPE,
O.CONTACT_ID,
O.CREATE_USER,
O.CREATE_DATETIME,
O.UPDATE_USER,
CURRENT TIMESTAMP,
'D'
);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TDA_PMR_DFT_LG
  AFTER DELETE
  ON XSR.PMR_DRAFT
  REFERENCING 
              OLD AS O
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_LOG
(
PMR_DRAFT_LOG_ID,
SRC_TRAN_ID,
SRC_APPL,
SRC_NODE,
PMR_NUM,
BRANCH,
RETAIN_CNTRY_CODE,
STATE,
CREATE_USER,
CREATE_DATETIME,
UPDATE_USER,
UPDATE_DATETIME,
ACTION_FLAG,
PARTNER_INIT
)
VALUES
(
NEXTVAL FOR XSR.SEQ_PMR_DRAFT_LOG_ID,
O.SRC_TRAN_ID,
O.SRC_APPL,
O.SRC_NODE,
O.PMR_NUM,
O.BRANCH,
O.RETAIN_CNTRY_CODE,
O.STATE,
O.CREATE_USER,
O.CREATE_DATETIME,
O.UPDATE_USER,
CURRENT TIMESTAMP,
'D',
O.PARTNER_INIT
);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIA_PMR_DFTRTN_LG
  AFTER INSERT
  ON XSR.PMR_DRAFT_RETAIN_INFO
  REFERENCING 
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_RETAIN_INFO_LOG ( PMR_DRAFT_RETAIN_INFO_LOG_ID, SRC_TRAN_ID, SRC_APPL, SRC_NODE, SW_HD, RETAIN_NODE, STATUS, RETAIN_CALLER_TYPE, IBM_CUST_NUM, CUST_NAME_NLS, CONTACT_NAME_NLS, SUPPORT_LEVEL, QUEUE, CENTER, NEXT_QUEUE, NEXT_CENTER, REQUEST_TYPE_ID, PROD_ID, PROD_ID_VERSION, COMP_ID, COMP_ID_RELEASE, RELEASE_LEVEL, SEVERITY, SYSTEM_DOWN, APAR_NUM, PRIORITY_PG, CALL_CAT, CUPRIMD, FIRST_NAME, LAST_NAME, PHONE_NUM, PHONE_EXT, ALT_PHONE_NUM, ALT_PHONE_EXT, FAX_NUM, PAGER, EMAIL_ADR, ALT_EMAIL_ADDRESS, PMR_CREATE_DATE, PMR_UPDATE_DATE, PMR_UPDATE_TIME, CREATE_USER, CREATE_DATETIME, UPDATE_USER, UPDATE_DATETIME, ACTION_FLAG ) VALUES ( NEXTVAL FOR XSR.SEQ_PMR_DRAFT_RETAIN_INFO_LOG_ID, N.SRC_TRAN_ID, N.SRC_APPL, N.SRC_NODE, N.SW_HD, N.RETAIN_NODE, N.STATUS, N.RETAIN_CALLER_TYPE, N.IBM_CUST_NUM, N.CUST_NAME_NLS, N.CONTACT_NAME_NLS, N.SUPPORT_LEVEL, N.QUEUE, N.CENTER, N.NEXT_QUEUE, N.NEXT_CENTER, N.REQUEST_TYPE_ID, N.PROD_ID, N.PROD_ID_VERSION, N.COMP_ID, N.COMP_ID_RELEASE, N.RELEASE_LEVEL, N.SEVERITY, N.SYSTEM_DOWN, N.APAR_NUM, N.PRIORITY_PG, N.CALL_CAT, N.CUPRIMD, N.FIRST_NAME, N.LAST_NAME, N.PHONE_NUM, N.PHONE_EXT, N.ALT_PHONE_NUM, N.ALT_PHONE_EXT, N.FAX_NUM, N.PAGER, N.EMAIL_ADR, N.ALT_EMAIL_ADDRESS, N.PMR_CREATE_DATE, N.PMR_UPDATE_DATE, N.PMR_UPDATE_TIME, N.CREATE_USER, N.CREATE_DATETIME, N.UPDATE_USER, N.UPDATE_DATETIME, 'I' );

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIA_PMR_DFTXSR_LG
  AFTER INSERT
  ON XSR.PMR_DRAFT_XSR_INFO
  REFERENCING 
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_XSR_INFO_LOG ( PMR_DRAFT_XSR_INFO_LOG_ID, SRC_TRAN_ID, SRC_APPL, SRC_NODE, SUPPORT_ID, SUPPORT_OFFERING_ID , MACHINE_ID , PLATFORM_ID , TITLE, DESCRIPTION, CONTACT_METHOD, ALT_CONTACT_METHOD, ALT_CONTACT_ID, OPERSYS_ID, CUST_TRACKING_NUM, OTHER_COMP_DSCR, INITIAL_SEVERITY, SEVERITY_DESCRIPTION, LOCALE, OPEN_COUNT, PMR_CREATE_SRC_APPL, CREATE_CONTACT_ID, UPDATE_CONTACT_ID, ADD_ALT_CONTACT_ID, REMOVE_ALT_CONTACT_ID, PARTNER_INIT, SUBMIT_TYPE, CONTACT_ID, CREATE_USER, CREATE_DATETIME, UPDATE_USER, UPDATE_DATETIME, ACTION_FLAG ) VALUES ( NEXTVAL FOR XSR.SEQ_PMR_DRAFT_XSR_INFO_LOG_ID, N.SRC_TRAN_ID, N.SRC_APPL, N.SRC_NODE, N.SUPPORT_ID, N.SUPPORT_OFFERING_ID , N.MACHINE_ID , N.PLATFORM_ID , N.TITLE, N.DESCRIPTION, N.CONTACT_METHOD, N.ALT_CONTACT_METHOD, N.ALT_CONTACT_ID, N.OPERSYS_ID, N.CUST_TRACKING_NUM, N.OTHER_COMP_DSCR, N.INITIAL_SEVERITY, N.SEVERITY_DESCRIPTION, N.LOCALE, N.OPEN_COUNT, N.PMR_CREATE_SRC_APPL, N.CREATE_CONTACT_ID, N.UPDATE_CONTACT_ID, N.ADD_ALT_CONTACT_ID, N.REMOVE_ALT_CONTACT_ID, N.PARTNER_INIT, N.SUBMIT_TYPE, N.CONTACT_ID, N.CREATE_USER, N.CREATE_DATETIME, N.UPDATE_USER, N.UPDATE_DATETIME, 'I' );

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIA_PMR_DFT_LG
  AFTER INSERT
  ON XSR.PMR_DRAFT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_LOG ( PMR_DRAFT_LOG_ID, SRC_TRAN_ID, SRC_APPL, SRC_NODE, PMR_NUM, BRANCH, RETAIN_CNTRY_CODE, STATE, CREATE_USER, CREATE_DATETIME, UPDATE_USER, UPDATE_DATETIME, ACTION_FLAG,PARTNER_INIT ) 
VALUES ( NEXTVAL FOR XSR.SEQ_PMR_DRAFT_LOG_ID, N.SRC_TRAN_ID, N.SRC_APPL, N.SRC_NODE, N.PMR_NUM, N.BRANCH, N.RETAIN_CNTRY_CODE, N.STATE, N.CREATE_USER, N.CREATE_DATETIME, N.UPDATE_USER,
N.UPDATE_DATETIME, 'I',N.PARTNER_INIT );

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_ADMIN_AUTH
   NO CASCADE BEFORE INSERT ON XSR.ADMIN_AUTH
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
set n.update_user = n.create_user;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_ADMIN_RIGHTS
   NO CASCADE BEFORE INSERT ON XSR.ADMIN_RIGHTS
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
set n.update_user = n.create_user;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_AUDIT_LOG
NO CASCADE BEFORE INSERT ON XSR.AUDIT_LOG
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.TIME_STAMP = CURRENT TIMESTAMP;--
IF (N.USER_ID IS NULL OR RTRIM(N.USER_ID) = '') THEN
SET N.USER_ID = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_AVL_OS
NO CASCADE BEFORE INSERT ON XSR.AVL_OPERATING_SYSTEM
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_AVL_RT
  NO CASCADE BEFORE INSERT
  ON XSR.AVL_REQUEST_TYPE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;   SET N.UPDATE_USER = N.CREATE_USER;   IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;   SET N.UPDATE_USER = USER;   END IF;   END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_BP_PDR
   NO CASCADE BEFORE INSERT ON XSR.BP_SITE_PMR_DRAFT_XREF
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_BP_PRX
   NO CASCADE BEFORE INSERT ON XSR.BP_SITE_PMR_RETRY_XREF
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_BP_PX
   NO CASCADE BEFORE INSERT ON XSR.BP_SITE_PMR_XREF
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_CMP_GRP
NO CASCADE BEFORE INSERT ON XSR.COMP_GROUP
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_CMP_GRP_X
NO CASCADE BEFORE INSERT ON XSR.COMP_GROUP_XREF
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_LIVE_ASS_HIST
  NO CASCADE BEFORE INSERT
  ON XSR.LIVE_ASSISTANCE_HISTORY
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP; --    
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --    
SET N.UPDATE_USER = N.CREATE_USER; --    
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER; --    
SET N.UPDATE_USER = USER; --    
END IF; --    
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_LIVE_ASS_LKP
  NO CASCADE BEFORE INSERT
  ON XSR.LIVE_ASSISTANCE_LOOKUP
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP; --    
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --   
SET N.UPDATE_USER = N.CREATE_USER; --    
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER; --    
SET N.UPDATE_USER = USER; --    
END IF; --    
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_live_excl_days
  NO CASCADE BEFORE INSERT
  ON XSR.live_assistance_exclude_days
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;     SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;     SET N.UPDATE_USER = N.CREATE_USER;     IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;     SET N.UPDATE_USER = USER;     END IF;     END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_ATCHMT
   NO CASCADE BEFORE INSERT ON XSR.PMR_ATTACHMENT
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_DFTRTN_LG
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_DRAFT_RETAIN_INFO
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
        SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
        SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
        SET N.UPDATE_USER=N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
      SET N.CREATE_USER = USER;--
      SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_DFTXSR_LG
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_DRAFT_XSR_INFO
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_DFT_LG
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_DRAFT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
      SET N.CREATE_DATETIME = CURRENT TIMESTAMP; --         
	SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --       
	SET N.UPDATE_USER=N.CREATE_USER;--       
	IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
      SET N.CREATE_USER = USER;--         
	SET N.UPDATE_USER = USER; --      
	END IF; --  
	END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_DRFT_XI
   NO CASCADE BEFORE  INSERT  ON XSR.PMR_DRAFT_XSR_INFO
   REFERENCING  NEW AS N
   FOR EACH ROW  MODE DB2SQL
BEGIN ATOMIC
        SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
        SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
        SET N.UPDATE_USER=N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
      SET N.CREATE_USER = USER;--
      SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_PMR_ERR_TRN
NO CASCADE BEFORE INSERT ON XSR.PMR_ERR_TRAN
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_HDR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_HEADER
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;     SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;   SET N.UPDATE_USER = N.CREATE_USER;     IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;     SET N.UPDATE_USER = USER;     END IF;     END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_HDR_RTN_IN
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_RETAIN_INFO
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--  
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; -- 
SET N.UPDATE_USER = N.CREATE_USER; -- 
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--  
SET N.UPDATE_USER = USER; -- 
END IF;--  
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_HDR_SIG_LN
   NO CASCADE BEFORE INSERT ON XSR.PMR_SIG_LINES
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_HDR_XSR_IN
   NO CASCADE BEFORE INSERT ON XSR.PMR_XSR_INFO
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_LOG
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_LOG
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_RETRY
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_RETRY
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  -- 
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --  
SET N.UPDATE_USER = N.CREATE_USER; --  
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER; --  
SET N.UPDATE_USER = USER;  -- 
END IF; --  
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_RETRY_RI
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_RETRY_RETAIN_INFO
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--  
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--  
SET N.UPDATE_USER = N.CREATE_USER;--  
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--  
SET N.UPDATE_USER = USER;--  
END IF;--  
END;

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_RETRY_TXT
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_RETRY_TEXT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP; --   
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --   
SET N.UPDATE_USER = N.CREATE_USER;--    
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER; --   
SET N.UPDATE_USER = USER; --   
END IF; --   
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_RETRY_XI
   NO CASCADE BEFORE INSERT ON XSR.PMR_RETRY_XSR_INFO
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_PMR_ROUTE_LG
NO CASCADE BEFORE INSERT ON XSR.PMR_ROUTE_LOG
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_PMR_TEXT
   NO CASCADE BEFORE INSERT ON XSR.PMR_TEXT
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_RETAIN_CC
NO CASCADE BEFORE INSERT ON XSR.RETAIN_CNTRY_CODE
REFERENCING  NEW AS N
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_TZ
   NO CASCADE BEFORE INSERT ON XSR.TIME_ZONE
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_USER_AUTH
   NO CASCADE BEFORE INSERT ON XSR.USER_AUTH
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USER_AUTH_LOG
  NO CASCADE BEFORE INSERT
  ON XSR.USER_AUTH_LOG
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--   
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  -- 
SET N.UPDATE_USER = N.CREATE_USER;--   
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--   
SET N.UPDATE_USER = USER;--   
END IF;--   
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USER_PROFILE
  NO CASCADE BEFORE INSERT
  ON XSR.USER_PROFILE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USR_PMR_DRF_X
   NO CASCADE BEFORE INSERT ON XSR.USER_PMR_DRAFT_XREF
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USR_PMR_RTY_X
   NO CASCADE BEFORE INSERT ON XSR.USER_PMR_RETRY_XREF
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USR_PMR_XREF
   NO CASCADE BEFORE INSERT ON XSR.USER_PMR_XREF
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USR_PRD_FAV
   NO CASCADE BEFORE INSERT ON XSR.USER_PROD_FAVORITES
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TIB_USR_PROF_NTF
   NO CASCADE BEFORE INSERT ON XSR.USER_PROFILE_NOTIFICATION
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
SET N.UPDATE_USER = N.CREATE_USER;  --
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;  --
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TIB_USR_PROF_RPT
   NO CASCADE BEFORE INSERT ON XSR.USER_PROFILE_REPORT
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
SET N.UPDATE_USER = N.CREATE_USER;--
IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
SET N.CREATE_USER = USER;--
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUA_PMR_DFTRTN_LG
  AFTER UPDATE
  ON XSR.PMR_DRAFT_RETAIN_INFO
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_RETAIN_INFO_LOG
(
  PMR_DRAFT_RETAIN_INFO_LOG_ID,
	SRC_TRAN_ID,
  SRC_APPL,
  SRC_NODE,
  SW_HD,
  RETAIN_NODE,
  STATUS,
  RETAIN_CALLER_TYPE,
  IBM_CUST_NUM,
  CUST_NAME_NLS,
  CONTACT_NAME_NLS,
  SUPPORT_LEVEL,
  QUEUE,
  CENTER,
  NEXT_QUEUE,
  NEXT_CENTER,
  REQUEST_TYPE_ID,
  PROD_ID,
  PROD_ID_VERSION,
  COMP_ID,
  COMP_ID_RELEASE,
  RELEASE_LEVEL,
  SEVERITY,
  SYSTEM_DOWN,
  APAR_NUM,
  PRIORITY_PG,
  CALL_CAT,
  CUPRIMD,
  FIRST_NAME,
  LAST_NAME,
  PHONE_NUM,
  PHONE_EXT,
  ALT_PHONE_NUM,
  ALT_PHONE_EXT,
  FAX_NUM,
  PAGER,
  EMAIL_ADR,
  ALT_EMAIL_ADDRESS,
  PMR_CREATE_DATE,
  PMR_UPDATE_DATE,
  PMR_UPDATE_TIME,
  CREATE_USER,
  CREATE_DATETIME,
  UPDATE_USER,
  UPDATE_DATETIME,
  ACTION_FLAG
)
VALUES
(
  NEXTVAL FOR XSR.SEQ_PMR_DRAFT_RETAIN_INFO_LOG_ID,
	N.SRC_TRAN_ID,
  N.SRC_APPL,
  N.SRC_NODE,
  N.SW_HD,
  N.RETAIN_NODE,
  N.STATUS,
  N.RETAIN_CALLER_TYPE,
  N.IBM_CUST_NUM,
  N.CUST_NAME_NLS,
  N.CONTACT_NAME_NLS,
  N.SUPPORT_LEVEL,
  N.QUEUE,
  N.CENTER,
  N.NEXT_QUEUE,
  N.NEXT_CENTER,
  N.REQUEST_TYPE_ID,
  N.PROD_ID,
  N.PROD_ID_VERSION,
  N.COMP_ID,
  N.COMP_ID_RELEASE,
  N.RELEASE_LEVEL,
  N.SEVERITY,
  N.SYSTEM_DOWN,
  N.APAR_NUM,
  N.PRIORITY_PG,
  N.CALL_CAT,
  N.CUPRIMD,
  N.FIRST_NAME,
  N.LAST_NAME,
  N.PHONE_NUM,
  N.PHONE_EXT,
  N.ALT_PHONE_NUM,
  N.ALT_PHONE_EXT,
  N.FAX_NUM,
  N.PAGER,
  N.EMAIL_ADR,
  N.ALT_EMAIL_ADDRESS,
  N.PMR_CREATE_DATE,
  N.PMR_UPDATE_DATE,
  N.PMR_UPDATE_TIME,
O.CREATE_USER,
O.CREATE_DATETIME,
N.UPDATE_USER,
N.UPDATE_DATETIME,
'U'
);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUA_PMR_DFTXSR_LG
  AFTER UPDATE
  ON XSR.PMR_DRAFT_XSR_INFO
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_XSR_INFO_LOG
(
PMR_DRAFT_XSR_INFO_LOG_ID,
SRC_TRAN_ID,
SRC_APPL,
SRC_NODE,
SUPPORT_ID,
        SUPPORT_OFFERING_ID ,
        MACHINE_ID ,
        PLATFORM_ID ,
TITLE,
DESCRIPTION,
CONTACT_METHOD,
ALT_CONTACT_METHOD,
ALT_CONTACT_ID,
OPERSYS_ID,
CUST_TRACKING_NUM,
OTHER_COMP_DSCR,
INITIAL_SEVERITY,
SEVERITY_DESCRIPTION,
LOCALE,
OPEN_COUNT,
PMR_CREATE_SRC_APPL,
CREATE_CONTACT_ID,
UPDATE_CONTACT_ID,
ADD_ALT_CONTACT_ID,
REMOVE_ALT_CONTACT_ID,
PARTNER_INIT,
SUBMIT_TYPE,
CONTACT_ID,
CREATE_USER,
CREATE_DATETIME,
UPDATE_USER,
UPDATE_DATETIME,
ACTION_FLAG
)
VALUES
(
NEXTVAL FOR XSR.SEQ_PMR_DRAFT_XSR_INFO_LOG_ID,
N.SRC_TRAN_ID,
N.SRC_APPL,
N.SRC_NODE,
N.SUPPORT_ID,
        N.SUPPORT_OFFERING_ID ,
        N.MACHINE_ID ,
        N.PLATFORM_ID ,
N.TITLE,
N.DESCRIPTION,
N.CONTACT_METHOD,
N.ALT_CONTACT_METHOD,
N.ALT_CONTACT_ID,
N.OPERSYS_ID,
N.CUST_TRACKING_NUM,
N.OTHER_COMP_DSCR,
N.INITIAL_SEVERITY,
N.SEVERITY_DESCRIPTION,
N.LOCALE,
N.OPEN_COUNT,
N.PMR_CREATE_SRC_APPL,
N.CREATE_CONTACT_ID,
N.UPDATE_CONTACT_ID,
N.ADD_ALT_CONTACT_ID,
N.REMOVE_ALT_CONTACT_ID,
N.PARTNER_INIT,
N.SUBMIT_TYPE,
N.CONTACT_ID,
O.CREATE_USER,
O.CREATE_DATETIME,
N.UPDATE_USER,
N.UPDATE_DATETIME,
'U'
);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUA_PMR_DFT_LG
  AFTER UPDATE
  ON XSR.PMR_DRAFT
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.PMR_DRAFT_LOG
(
PMR_DRAFT_LOG_ID,
SRC_TRAN_ID,
SRC_APPL,
SRC_NODE,
PMR_NUM,
BRANCH,
RETAIN_CNTRY_CODE,
STATE,
CREATE_USER,
CREATE_DATETIME,
UPDATE_USER,
UPDATE_DATETIME,
ACTION_FLAG,
PARTNER_INIT
)
VALUES
(
NEXTVAL FOR XSR.SEQ_PMR_DRAFT_LOG_ID,
N.SRC_TRAN_ID,
N.SRC_APPL,
N.SRC_NODE,
N.PMR_NUM,
N.BRANCH,
N.RETAIN_CNTRY_CODE,
N.STATE,
O.CREATE_USER,
O.CREATE_DATETIME,
N.UPDATE_USER,
N.UPDATE_DATETIME,
'U',
N.PARTNER_INIT
);

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_ADMIN_AUTH
   NO CASCADE BEFORE UPDATE ON XSR.ADMIN_AUTH
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_ADMIN_RIGHTS
   NO CASCADE BEFORE UPDATE ON XSR.ADMIN_RIGHTS
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_AUDIT_LOG
NO CASCADE BEFORE UPDATE ON XSR.AUDIT_LOG
REFERENCING NEW AS N OLD AS O
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.TIME_STAMP = CURRENT TIMESTAMP;--
IF (N.USER_ID IS NULL OR RTRIM(N.USER_ID) = '') THEN
SET N.USER_ID = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_AVL_OS
NO CASCADE BEFORE UPDATE ON XSR.AVL_OPERATING_SYSTEM
REFERENCING NEW AS N OLD AS O
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_BP_PDR
   NO CASCADE BEFORE UPDATE ON XSR.BP_SITE_PMR_DRAFT_XREF
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_BP_PRX
   NO CASCADE BEFORE UPDATE ON XSR.BP_SITE_PMR_RETRY_XREF
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_BP_PX
   NO CASCADE BEFORE UPDATE ON XSR.BP_SITE_PMR_XREF
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_CMP_GRP
NO CASCADE BEFORE UPDATE ON XSR.COMP_GROUP
REFERENCING NEW AS N OLD AS O
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_LIVE_ASS_HIST
  NO CASCADE BEFORE UPDATE
  ON XSR.LIVE_ASSISTANCE_HISTORY
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--     
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER; --    
END IF; --    
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_LIVE_ASS_LKP
  NO CASCADE BEFORE UPDATE
  ON XSR.LIVE_ASSISTANCE_LOOKUP
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER; --
END IF;   --
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TuB_live_excl_days
  NO CASCADE BEFORE UPDATE
  ON XSR.live_assistance_exclude_days
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;     IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;     END IF;     END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_ATCHMT
   NO CASCADE BEFORE UPDATE ON XSR.PMR_ATTACHMENT
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_DFTRTN_LG
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_DRAFT_RETAIN_INFO
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
   IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') then
     SET N.UPDATE_USER = USER;--
   END IF;  --
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_DFTXSR_LG
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_DRAFT_XSR_INFO
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --      
	 IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') then
     SET N.UPDATE_USER = USER; --      
		 END IF;    --
		 END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_DFT_LG
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_DRAFT
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;   --    
	 IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') then
     SET N.UPDATE_USER = USER;  --     
		 END IF; --  
		 END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_DRFT_XI
   NO CASCADE BEFORE  UPDATE  ON XSR.PMR_DRAFT_XSR_INFO
   REFERENCING  OLD AS O  NEW AS N  FOR EACH ROW  MODE DB2SQL
BEGIN ATOMIC
   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
   IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') then
     SET N.UPDATE_USER = USER;--
   END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_PMR_ERR_TRN
NO CASCADE BEFORE UPDATE ON XSR.PMR_ERR_TRAN
REFERENCING NEW AS N OLD AS O
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_HDR
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_HEADER
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;     IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;     END IF;     END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_HDR_RTN_IN
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_RETAIN_INFO
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; -- 
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--  
END IF;--  
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_HDR_SIG_LN
   NO CASCADE BEFORE UPDATE ON XSR.PMR_SIG_LINES
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_HDR_XSR_IN
   NO CASCADE BEFORE UPDATE ON XSR.PMR_XSR_INFO
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_LOG
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_LOG
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_RETRY
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_RETRY
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--   
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER; --  
END IF; --  
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_RETRY_RI
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_RETRY_RETAIN_INFO
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; -- 
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--  
END IF;--  
END;

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_RETRY_TXT
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_RETRY_TEXT
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_RETRY_XI
   NO CASCADE BEFORE UPDATE ON XSR.PMR_RETRY_XSR_INFO
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_PMR_ROUTE_LG
NO CASCADE BEFORE UPDATE ON XSR.PMR_ROUTE_LOG
REFERENCING NEW AS N OLD AS O
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_PMR_TEXT
   NO CASCADE BEFORE UPDATE ON XSR.PMR_TEXT
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_RETAIN_CC
NO CASCADE BEFORE UPDATE ON XSR.RETAIN_CNTRY_CODE
REFERENCING NEW AS N OLD AS O
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_TZ
   NO CASCADE BEFORE UPDATE ON XSR.TIME_ZONE
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_USER_AUTH
   NO CASCADE BEFORE UPDATE ON XSR.USER_AUTH
   REFERENCING  NEW AS N
 OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USER_AUTH_LOG
  NO CASCADE BEFORE UPDATE
  ON XSR.USER_AUTH_LOG
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP; --  
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;   --
END IF; --  
END;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USER_PROFILE
  NO CASCADE BEFORE UPDATE
  ON XSR.USER_PROFILE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
   IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
     SET N.UPDATE_USER = USER;  --
   END IF;  --
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USR_PMR_DRF_X
   NO CASCADE BEFORE UPDATE ON XSR.USER_PMR_DRAFT_XREF
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USR_PMR_RTY_X
   NO CASCADE BEFORE UPDATE ON XSR.USER_PMR_RETRY_XREF
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USR_PMR_XREF
   NO CASCADE BEFORE UPDATE ON XSR.USER_PMR_XREF
   REFERENCING  NEW AS N
      OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USR_PRD_FAV
   NO CASCADE BEFORE UPDATE ON XSR.USER_PROD_FAVORITES
   REFERENCING  NEW AS N
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.TUB_USR_PROF_NTF
   NO CASCADE BEFORE UPDATE ON XSR.USER_PROFILE_NOTIFICATION
   REFERENCING  NEW AS N
 OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;  --
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;  --
END IF;  --
END
;

SET CURRENT SCHEMA = "XSR     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRPROD";
CREATE TRIGGER XSR.TUB_USR_PROF_RPT
   NO CASCADE BEFORE UPDATE ON XSR.USER_PROFILE_REPORT
   REFERENCING  NEW AS N
 OLD AS O
   FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
IF (N.UPDATE_USER IS NULL OR RTRIM(N.UPDATE_USER) = '') THEN
SET N.UPDATE_USER = USER;--
END IF;--
END
;

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_DA_CFG_PROP_LOG
  AFTER DELETE
  ON XSR.CFG_PROPERTIES
  REFERENCING 
              OLD AS O
  FOR EACH ROW
INSERT INTO XSR.CFG_PROPERTIES_LOG
	(
	PROP_LOG_ID,
	PROPERTIES_ID,
	KEY,
	VALUE,
	CREATE_USER,
	CREATE_DATETIME,
	UPDATE_USER,
	UPDATE_DATETIME,
	ACTION_FLAG
	)
	VALUES
	(
	NEXTVAL FOR XSR.SEQ_XSR_PROPERTIES_LOG_ID,
	O.PROPERTIES_ID,
	O.KEY,
	O.VALUE,
	USER,
	CURRENT TIMESTAMP,
	USER,
	CURRENT TIMESTAMP,
	'D'
	);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_DA_USER_AUTH_LOG
  AFTER DELETE
  ON XSR.USER_AUTH
  REFERENCING 
              OLD AS O
  FOR EACH ROW
INSERT INTO XSR.USER_AUTH_LOG
(
USER_AUTH_LOG_ID,
USER_ID,
RIGHT_MASK,
IS_LOCKED,
CREATE_USER,
CREATE_DATETIME,
UPDATE_USER,
UPDATE_DATETIME,
ACTION_FLAG
)
VALUES
(
NEXTVAL FOR XSR.SEQ_USER_AUTH_LOG_ID,
O.USER_ID,
O.RIGHT_MASK,
O.IS_LOCKED,
O.CREATE_USER,
O.CREATE_DATETIME,
O.UPDATE_USER,
CURRENT TIMESTAMP,
'D'
);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IA_CFG_PROP_LOG
  AFTER INSERT
  ON XSR.CFG_PROPERTIES
  REFERENCING 
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.CFG_PROPERTIES_LOG ( PROP_LOG_ID, PROPERTIES_ID, KEY, VALUE, CREATE_USER, CREATE_DATETIME, UPDATE_USER, UPDATE_DATETIME, ACTION_FLAG ) VALUES ( NEXTVAL FOR XSR.SEQ_XSR_PROPERTIES_LOG_ID, N.PROPERTIES_ID, N.KEY, N.VALUE, USER, CURRENT TIMESTAMP, USER, CURRENT TIMESTAMP, 'I' );

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IA_USER_AUTH_LOG
  AFTER INSERT
  ON XSR.USER_AUTH
  REFERENCING 
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.USER_AUTH_LOG ( USER_AUTH_LOG_ID, USER_ID, RIGHT_MASK, IS_LOCKED, CREATE_USER, CREATE_DATETIME, UPDATE_USER, UPDATE_DATETIME, ACTION_FLAG ) VALUES ( NEXTVAL FOR XSR.SEQ_USER_AUTH_LOG_ID, N.USER_ID, N.RIGHT_MASK, N.IS_LOCKED, N.CREATE_USER, N.CREATE_DATETIME, N.UPDATE_USER, N.UPDATE_DATETIME, 'I' );

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_APPL_AUTH
  NO CASCADE BEFORE INSERT
  ON XSR.APPL_AUTH
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;    --
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_AR_KW
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_ADV_ROUTE_KEYWORD
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_AR_KWL
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_ADV_ROUTE_KEYWORD_LIST
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_CGCX
  NO CASCADE BEFORE INSERT
  ON XSR.COMP_GROUP_COMP_XREF
  REFERENCING 
              NEW AS N
  FOR EACH ROW
BEGIN ATOMIC
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AAR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_A_ADV_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;    --
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AAR_ED
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_A_ADV_ROUTE_EXCL_DAYS
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AAR_KW
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_A_ADV_ROUTE_KEYWORD
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AAR_KWL
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_A_ADV_ROUTE_KEYWORD_LIST
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AAR_RS
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_A_ADV_ROUTE_SET
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AAR_TS
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_A_ADV_ROUTE_TIME_SLOT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp; --   
set n.update_datetime = current timestamp;   -- 
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_ADV_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
	BEGIN ATOMIC
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_ARS
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_ADV_ROUTE_SET
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_AR_ED
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_ADV_ROUTE_EXCL_DAYS
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ib_pmr_ar_ts
before insert on xsr.pmr_adv_route_time_slot
referencing new as n for each row mode db2sql
begin atomic
set n.create_datetime = current timestamp;--
set n.update_datetime = current timestamp;--
if (n.create_user is null or rtrim(n.create_user) = '') then


set n.create_user = user;--
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger XSR.t_ib_PMR_BASIC_RTE
before insert on XSR.PMR_BASIC_ROUTE
referencing new as n for each row mode db2sql
begin atomic
   set n.create_datetime = current timestamp;  --
   set n.update_datetime = current timestamp;  --
   set n.update_user = n.create_user;  --
   if (n.create_user is null or rtrim(n.create_user) = '') then
      set n.create_user = user;  --
      set n.update_user = user;  --
   end if;  --
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_CNTRY_CFG
   NO CASCADE BEFORE INSERT ON XSR.PMR_COUNTRY_CONFIG
   REFERENCING  NEW AS n
   FOR EACH ROW MODE DB2SQL
begin atomic
   set n.create_datetime = current timestamp;--
   set n.update_datetime = current timestamp;--
   set n.update_user = n.create_user;--
   if (n.create_user is null or rtrim(n.create_user) = '') then
      set n.create_user = user;--
      set n.update_user = user;--
   end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_CNT_O_CFG
   NO CASCADE BEFORE INSERT ON XSR.PMR_COUNTRY_ORG_CONFIG
   REFERENCING  NEW AS n
   FOR EACH ROW MODE DB2SQL
begin atomic
   set n.create_datetime = current timestamp;--
   set n.update_datetime = current timestamp;--
   set n.update_user = n.create_user;--
   if (n.create_user is null or rtrim(n.create_user) = '') then
      set n.create_user = user;--
      set n.update_user = user;--
   end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_CR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_COUNTRY_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_EXCR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_ENT_EXC_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_PR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_PREM_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_PRS
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_PREM_ROUTE_SET
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_PR_ED
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_PREM_ROUTE_EXCL_DAYS
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ib_pmr_pr_ts
before insert on xsr.pmr_prem_route_time_slot
referencing new as n for each row mode db2sql
begin atomic
set n.create_datetime = current timestamp;--
set n.update_datetime = current timestamp;--
if (n.create_user is null or rtrim(n.create_user) = '') then


set n.create_user = user;--
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_SYNC
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_SYNC
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_TAR
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_T_ADV_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp; --   
set n.update_datetime = current timestamp;   -- 
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;    --
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_TARS
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_T_ADV_ROUTE_SET
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_TAR_ED
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_T_ADV_ROUTE_EXCL_DAYS
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_TAR_KW
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_T_ADV_ROUTE_KEYWORD
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_PMR_TAR_KWL
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_T_ADV_ROUTE_KEYWORD_LIST
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_IB_TAR_TS
  NO CASCADE BEFORE INSERT
  ON XSR.PMR_T_ADV_ROUTE_TIME_SLOT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UA_CFG_PROP_LOG
  AFTER UPDATE
  ON XSR.CFG_PROPERTIES
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.CFG_PROPERTIES_LOG
	(
	PROP_LOG_ID,
	PROPERTIES_ID,
	KEY,
	VALUE,
	CREATE_USER,
	CREATE_DATETIME,
	UPDATE_USER,
	UPDATE_DATETIME,
	ACTION_FLAG
	)
	VALUES
	(
	NEXTVAL FOR XSR.SEQ_XSR_PROPERTIES_LOG_ID,
	N.PROPERTIES_ID,
	N.KEY,
	N.VALUE,
	USER,
	CURRENT TIMESTAMP,
	USER,
	CURRENT TIMESTAMP,
	'U'
	);

SET CURRENT SCHEMA = "CAM     ";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UA_USER_AUTH_LOG
  AFTER UPDATE
  ON XSR.USER_AUTH
  REFERENCING 
              OLD AS O
              NEW AS N
  FOR EACH ROW
INSERT INTO XSR.USER_AUTH_LOG
(
USER_AUTH_LOG_ID,
USER_ID,
RIGHT_MASK,
IS_LOCKED,
CREATE_USER,
CREATE_DATETIME,
UPDATE_USER,
UPDATE_DATETIME,
ACTION_FLAG
)
VALUES
(
NEXTVAL FOR XSR.SEQ_USER_AUTH_LOG_ID,
N.USER_ID,
N.RIGHT_MASK,
N.IS_LOCKED,
O.CREATE_USER,
O.CREATE_DATETIME,
N.UPDATE_USER,
N.UPDATE_DATETIME,
'U'
);

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_appl_auth no cascade
before update on xsr.appl_auth
referencing new as n for each row mode db2sql
begin atomic
   set n.update_datetime = current timestamp;--
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;--
   end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_ar_kw no cascade
before update on xsr.pmr_adv_route_keyword
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_ar_kwl no cascade
before update on xsr.pmr_adv_route_keyword_list
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_cgcx no cascade
before update on xsr.comp_group_comp_xref
referencing new as n for each row mode db2sql
begin atomic
   set n.update_datetime = current timestamp;--
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;--
   end if;--
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_AAR
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_A_ADV_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.update_datetime = current timestamp; --  
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user; --  
end if; --  
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_aar_ed no cascade
before update on xsr.pmr_a_adv_route_excl_days
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_aar_kw no cascade
before update on xsr.pmr_a_adv_route_keyword
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_aar_kwl no cascade
before update on xsr.pmr_a_adv_route_keyword_list
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_aar_rs no cascade
before update on xsr.pmr_a_adv_route_set
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_aar_ts no cascade
before update on xsr.pmr_a_adv_route_time_slot
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_AR
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_ADV_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.update_datetime = current timestamp; --  
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user; --  
end if; --  
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_ars no cascade
before update on xsr.pmr_adv_route_set
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_ar_ed no cascade
before update on xsr.pmr_adv_route_excl_days
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_AR_TS
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_ADV_ROUTE_TIME_SLOT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger XSR.t_ub_PMR_BASIC_RTE no cascade
before update on XSR.PMR_BASIC_ROUTE
referencing new as n for each row mode db2sql
begin atomic
   set n.update_datetime = current timestamp;  --
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;  --
   end if;  --
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_CNTRY_CFG
   NO CASCADE BEFORE UPDATE ON XSR.PMR_COUNTRY_CONFIG
   REFERENCING  NEW AS n
   FOR EACH ROW MODE DB2SQL
begin atomic
   set n.update_datetime = current timestamp;--
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;--
   end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_CNT_O_CFG
   NO CASCADE BEFORE UPDATE ON XSR.PMR_COUNTRY_ORG_CONFIG
   REFERENCING  NEW AS n
   FOR EACH ROW MODE DB2SQL
begin atomic
   set n.update_datetime = current timestamp;--
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;--
   end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_cr no cascade
before update on xsr.pmr_country_route
referencing new as n for each row mode db2sql
begin atomic
   set n.update_datetime = current timestamp;  --
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;  --
   end if;  --
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_excr no cascade
before update on xsr.pmr_ent_exc_route
referencing new as n for each row mode db2sql
begin atomic
   set n.update_datetime = current timestamp;  --
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;  --
   end if;  --
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_pr no cascade
before update on xsr.pmr_prem_route
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_prs no cascade
before update on xsr.pmr_prem_route_set
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_pr_ed no cascade
before update on xsr.pmr_prem_route_excl_days
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_PR_TS
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_PREM_ROUTE_TIME_SLOT
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.create_datetime = current timestamp;    --
set n.update_datetime = current timestamp;    --
set n.update_user = n.create_user;   --
if (n.create_user is null or rtrim(n.create_user) = '') then
set n.create_user = user;   --
set n.update_user = user;    --
end if;--
END;

SET CURRENT SCHEMA = "JBLACKER";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","JBLACKER";
create trigger xsr.t_ub_pmr_sync no cascade
before update on xsr.pmr_sync
referencing new as n for each row mode db2sql
begin atomic
   set n.update_datetime = current timestamp;--
   if (n.update_user is null or rtrim(n.update_user) = '') then
     set n.update_user = user;--
   end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
CREATE TRIGGER XSR.T_UB_PMR_TAR
  NO CASCADE BEFORE UPDATE
  ON XSR.PMR_T_ADV_ROUTE
  REFERENCING 
              NEW AS N
  FOR EACH ROW
begin atomic
set n.update_datetime = current timestamp;  -- 
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user; --  
end if; --  
end;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_tars no cascade
before update on xsr.pmr_t_adv_route_set
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_tar_ed no cascade
before update on xsr.pmr_t_adv_route_excl_days
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_tar_kw no cascade
before update on xsr.pmr_t_adv_route_keyword
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_tar_kwl no cascade
before update on xsr.pmr_t_adv_route_keyword_list
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;

SET CURRENT SCHEMA = "XSRDBADM";
SET CURRENT PATH = "SYSIBM","SYSFUN","SYSPROC","XSRDBADM";
create trigger xsr.t_ub_pmr_tar_ts no cascade
before update on xsr.pmr_t_adv_route_time_slot
referencing new as n for each row mode db2sql
begin atomic
set n.update_datetime = current timestamp;--
if (n.update_user is null or rtrim(n.update_user) = '') then
set n.update_user = user;--
end if;--
end
;



COMMIT WORK;

CONNECT RESET;

TERMINATE;
